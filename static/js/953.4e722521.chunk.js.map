{"version":3,"file":"static/js/953.4e722521.chunk.js","mappings":"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","sources":["components/Box/Box.js","components/MovieReviewsItem/MovieReviewsItem.jsx","components/MovieReviews/MovieReviews.jsx","services/moviesApi.js"],"sourcesContent":["import styled from 'styled-components';\nimport {\n  color,\n  space,\n  layout,\n  flexbox,\n  background,\n  border,\n  position,\n} from 'styled-system';\n\nconst Box = styled('div')(\n  color,\n  space,\n  layout,\n  flexbox,\n  background,\n  border,\n  position\n);\n\nexport default Box;\n","import Box from 'components/Box';\n\nimport { getImg } from 'services/moviesApi';\n\nconst MovieReviewsItem = ({ review }) => {\n  const {\n    author_details: { name, username, avatar_path, rating },\n    content,\n    created_at,\n    updated_at,\n  } = review;\n\n  const author = name ? name : username;\n\n  return (\n    <Box as=\"li\" display=\"flex\">\n      <Box width=\"200px\">\n        <Box width=\"120px\">\n          <img src={getImg(avatar_path)} alt={`${author} avatar`} />\n        </Box>\n        <h3>{author}</h3>\n        <p>Rating: {rating}</p>\n      </Box>\n      <div>\n        <p>{content}</p>\n        <p>Create: {created_at}</p>\n        <p>Update: {updated_at}</p>\n      </div>\n    </Box>\n  );\n};\n\nexport default MovieReviewsItem;\n\n// \"author\": \"MSB\",\n// \"author_details\": {\n//     \"name\": \"MSB\",\n//     \"username\": \"msbreviews\",\n//     \"avatar_path\": \"/https://www.gravatar.com/avatar/992eef352126a53d7e141bf9e8707576.jpg\",\n//     \"rating\": 5.0\n// },\n// \"content\": \"FULL SPOILER-FREE REVIEW @ https://www.msbreviews.com/movie-reviews/black-adam-spoiler-free-review\\r\\n\\r\\n\\\"Black Adam is far from impressive, being somewhat disappointing due to its formulaic, predictable screenplay when something different was anticipated.\\r\\n\\r\\nLorne Balfe's epic score and a magnificent cast - Dwayne Johnson, Aldis Hodge, and most remarkably Pierce Brosnan are phenomenal - try to elevate the decent action and visuals, but the moderate entertainment levels don't make up for the dated narrative structure.\\r\\n\\r\\nTiresomely heavy exposition, story with little to no creativity, and inconsistent humor make it impossible for the DCEU to take \\\"the next step\\\" in a truly impactful manner.\\\"\\r\\n\\r\\nRating: C+\",\n// \"created_at\": \"2022-10-19T15:58:22.495Z\",\n// \"id\": \"63501e9ed363e5007a664110\",\n// \"updated_at\": \"2022-10-19T15:58:22.580Z\",\n// \"url\": \"https://www.themoviedb.org/review/63501e9ed363e5007a664110\"\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport MovieReviewsItem from 'components/MovieReviewsItem';\n\nimport { getReviews } from 'services/moviesApi';\n\nconst MovieReviews = () => {\n  const [reviews, setReviews] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    try {\n      getReviews(movieId).then(reviews => setReviews(reviews.results));\n    } catch (error) {\n      console.log(error);\n    }\n  }, [movieId]);\n\n  if (!reviews) {\n    return null;\n  }\n\n  console.log(reviews);\n\n  return (\n    <section>\n      <h1>Reviews</h1>\n      {reviews.length > 0 ? (\n        <ul>\n          {reviews.map(review => (\n            <MovieReviewsItem key={review.id} review={review} />\n          ))}\n        </ul>\n      ) : (\n        <p>There are no reviews about the movie yet</p>\n      )}\n    </section>\n  );\n};\n\nexport default MovieReviews;\n","import axios from 'axios';\n\nconst apiKey = process.env.REACT_APP_API_KEY;\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getMovies = async (ref, page) => {\n  let movies = null;\n\n  switch (ref) {\n    case 'day':\n    case 'week':\n      movies = await axios({\n        url: `/trending/movie/${ref}?api_key=${apiKey}&page=${page}`,\n      });\n      break;\n\n    case 'popular':\n    case 'top_rated':\n    case 'upcoming':\n      movies = await axios({\n        url: `/movie/${ref}?api_key=${apiKey}&page=${page}`,\n      });\n      break;\n\n    default:\n      movies = await axios({\n        url: `/search/movie?api_key=${apiKey}&query=${ref}&page=${page}`,\n      });\n      break;\n  }\n\n  return movies.data;\n};\n\nexport const getMovieById = async movieId => {\n  const movie = await axios({\n    url: `/movie/${movieId}?api_key=${apiKey}`,\n  });\n\n  return movie.data;\n};\n\nexport const getCast = async movieId => {\n  const castData = await axios({\n    url: `/movie/${movieId}/credits?api_key=${apiKey}`,\n  });\n\n  return castData.data.cast;\n};\n\nexport const getReviews = async (movieId, page = 1) => {\n  const reviews = await axios({\n    url: `/movie/${movieId}/reviews?api_key=${apiKey}&page=${page}`,\n  });\n\n  return reviews.data;\n};\n\nexport const getGenres = async () => {\n  const genres = await axios({\n    url: `/genre/movie/list?api_key=${apiKey}`,\n  });\n\n  return genres.data;\n};\n\nexport const getImg = imgPath =>\n  `https://image.tmdb.org/t/p/original${imgPath}`;\n"],"names":["styled","color","space","layout","flexbox","background","border","position","review","author_details","name","username","avatar_path","rating","content","created_at","updated_at","author","Box","as","display","width","src","getImg","alt","useState","reviews","setReviews","movieId","useParams","useEffect","getReviews","then","results","error","console","log","length","map","id","apiKey","process","REACT_APP_API_KEY","axios","getMovies","ref","page","movies","url","data","getMovieById","movie","getCast","castData","cast","getGenres","genres","imgPath"],"sourceRoot":""}