{"version":3,"file":"static/js/964.b498c0f1.chunk.js","mappings":"sQAGaA,EAAYC,EAAAA,GAAAA,GAAH,iMAMX,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,IAAnB,IAEU,SAAAH,GAAC,OAAIA,EAAEC,MAAMG,YAAYC,IAAxB,IAGV,SAAAL,GAAC,OAAIA,EAAEC,MAAMC,OAAOI,MAAnB,IAIDC,GAAaR,EAAAA,EAAAA,IAAOS,EAAAA,GAAPT,CAAH,gRAMa,SAAAC,GAAC,OAAIA,EAAEC,MAAMQ,YAAYC,MAAxB,IAGD,SAAAV,GAAC,OAAIA,EAAEC,MAAMQ,YAAYE,MAAxB,IAGD,SAAAX,GAAC,OAAIA,EAAEC,MAAMQ,YAAYG,EAAxB,IAMxBC,EAAYd,EAAAA,GAAAA,GAAH,wFACP,SAAAC,GAAC,OAAIA,EAAEC,MAAMa,UAAU,EAAtB,IACC,SAAAd,GAAC,OAAIA,EAAEC,MAAMc,MAAMC,OAAlB,IAILC,EAAWlB,EAAAA,GAAAA,EAAH,0FACN,SAAAC,GAAC,OAAIA,EAAEC,MAAMa,UAAU,EAAtB,I,SCXhB,EArBmB,SAAC,GAAuB,IAArBI,EAAoB,EAApBA,MAAOC,EAAa,EAAbA,OACrBC,GAAWC,EAAAA,EAAAA,MAETC,EAAoDJ,EAApDI,GAAIC,EAAgDL,EAAhDK,MAAOC,EAAyCN,EAAzCM,aAAcC,EAA2BP,EAA3BO,YAAaC,EAAcR,EAAdQ,UAExCC,EAAcR,EACjBS,QAAO,gBAAGN,EAAH,EAAGA,GAAH,OAAYI,EAAUG,SAASP,EAA/B,IACPQ,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAEZ,OACE,SAAClC,EAAD,WACE,UAACS,EAAD,CAAY0B,GAAE,oBAAeX,GAAMY,MAAO,CAAEC,KAAMf,GAAlD,WACE,gBAAKgB,KAAKC,EAAAA,EAAAA,IAAOZ,GAAca,IAAKf,KACpC,SAACV,EAAD,UAAYU,KACZ,SAACN,EAAD,UAAWU,EAAYY,KAAK,SAC5B,SAACtB,EAAD,UAAWO,QAIlB,EC5BYgB,EAAkBzC,EAAAA,GAAAA,IAAH,0QAMM,SAAAC,GAAC,OAAIA,EAAEC,MAAMQ,YAAYE,MAAxB,IAID,SAAAX,GAAC,OAAIA,EAAEC,MAAMQ,YAAYG,EAAxB,IAKtB6B,EAAc1C,EAAAA,GAAAA,GAAH,oLAEP,SAAAC,GAAC,OAAIA,EAAEC,MAAMc,MAAMC,OAAlB,IACD,SAAAhB,GAAC,OAAIA,EAAEC,MAAMyC,YAAY1B,OAAxB,IACP,SAAAhB,GAAC,OAAIA,EAAEC,MAAMC,OAAOyC,KAAnB,IAEsB,SAAA3C,GAAC,OAAIA,EAAEC,MAAMQ,YAAYG,EAAxB,IAKtBgC,EAAa7C,EAAAA,GAAAA,GAAH,ybASa,SAAAC,GAAC,OAAIA,EAAEC,MAAMQ,YAAYC,MAAxB,IAID,SAAAV,GAAC,OAAIA,EAAEC,MAAMQ,YAAYE,MAAxB,IAID,SAAAX,GAAC,OAAIA,EAAEC,MAAMQ,YAAYG,EAAxB,IAMxBiC,EAAS9C,EAAAA,GAAAA,GAAH,oEAKN+C,EAAc/C,EAAAA,GAAAA,OAAH,kQAIb,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,IAAnB,IAGU,SAAAH,GAAC,OAAIA,EAAEC,MAAMC,OAAO6C,SAAnB,IAID,SAAA/C,GAAC,OAAIA,EAAEC,MAAMG,YAAYC,IAAxB,IAIV,SAAAL,GAAC,OAAIA,EAAEC,MAAMC,OAAOI,MAAnB,ICId,EA7DkB,SAAC,GAAyB,IAAvB0C,EAAsB,EAAtBA,SAAUzB,EAAY,EAAZA,MAC7B,GAA4B0B,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAsBF,EAAAA,EAAAA,UAAS,IAA/B,eAAOG,EAAP,KAAYC,EAAZ,KACA,GAAwBJ,EAAAA,EAAAA,UAAS,GAAjC,eAAOK,EAAP,KAAaC,EAAb,KACA,GAAoCN,EAAAA,EAAAA,UAAS,MAA7C,eAAOO,EAAP,KAAmBC,EAAnB,KACA,GAA4BR,EAAAA,EAAAA,UAAS,IAArC,eAAO9B,EAAP,KAAeuC,EAAf,MAEAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,sHAEsBC,EAAAA,EAAAA,IAAUT,EAAKE,GAFrC,uBAETQ,EAFS,EAETA,QAASC,EAFA,EAEAA,YACjBZ,GAAU,SAAAa,GAAU,wBAAQA,IAAR,OAAuBF,GAAvB,IACpBG,QAAQC,IAAIJ,GACZL,EAAcM,GALG,WAMQI,EAAAA,EAAAA,MANR,iBAMThD,EANS,EAMTA,OACRuC,EAAUvC,GAPO,kDASjB8C,QAAQC,IAAR,MATiB,0DAAH,qDAalB,GAAKlB,EAIL,OAAII,IAAQJ,GACVG,EAAU,IACVE,EAAOL,QACPO,EAAQ,SAIVK,GACD,GAAE,CAACZ,EAAUM,EAAMF,IAEpB,IAIIgB,EAAWZ,EAAaF,EAE5B,OACE,UAACd,EAAD,YACE,SAACC,EAAD,UAAclB,KAEd,UAACqB,EAAD,WACGM,EAAOpB,KAAI,SAAAZ,GAAK,OACf,SAAC,EAAD,CAA2BA,MAAOA,EAAOC,OAAQA,GAAhCD,EAAMI,GADR,KAGjB,SAACuB,EAAD,UACGK,EAAOmB,OAAS,GAAKD,EAAW,IAC/B,SAACtB,EAAD,CAAawB,KAAK,SAASC,QAAS,WAf5ChB,GAAQ,SAAAiB,GAAQ,OAAIA,EAAW,CAAf,GAe4B,EAApC,8BAQX,C,uICtEYC,EAAQ1E,EAAAA,GAAAA,MAAH,0fAQI,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,OAAOwE,KAAnB,IAEgB,SAAA1E,GAAC,OAClCA,EAAEC,MAAMQ,YAAYE,MADc,IAOZ,SAAAX,GAAC,OAAIA,EAAEC,MAAMG,YAAYC,IAAxB,IAOK,SAAAL,GAAC,OAAIA,EAAEC,MAAMQ,YAAYE,MAAxB,IAKtBgE,EAAW5E,EAAAA,GAAAA,IAAH,odAIV,SAAAC,GAAC,OAAIA,EAAEC,MAAM2E,MAAMC,KAAlB,IAWsB,SAAA7E,GAAC,OAAIA,EAAEC,MAAMQ,YAAYC,MAAxB,IAKD,SAAAV,GAAC,OAAIA,EAAEC,MAAMQ,YAAYG,EAAxB,IAMtBkE,EAAW/E,EAAAA,GAAAA,GAAH,sIAKN,SAAAC,GAAC,OAAIA,EAAEC,MAAM2E,MAAMC,KAAlB,IAIHtE,GAAaR,EAAAA,EAAAA,IAAOS,EAAAA,GAAPT,CAAH,o1BACR,SAAAC,GAAC,OAAIA,EAAEC,MAAM2E,MAAMC,KAAlB,IAKL,SAAA7E,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,IAAnB,IAEU,SAAAH,GAAC,OAAIA,EAAEC,MAAMG,YAAYC,IAAxB,IACA,SAAAL,GAAC,OAAIA,EAAEC,MAAMG,YAAYC,IAAxB,IAcA,SAAAL,GAAC,OAAIA,EAAEC,MAAMC,OAAO6E,UAAnB,IAKC,SAAA/E,GAAC,OAAIA,EAAEC,MAAMG,YAAYC,IAAxB,IASH,SAAAL,GAAC,OAAIA,EAAEC,MAAMC,OAAO6E,UAAnB,IACZ,SAAA/E,GAAC,OAAIA,EAAEC,MAAMC,OAAO6C,SAAnB,IASD,SAAA/C,GAAC,OAAIA,EAAEC,MAAMC,OAAOI,MAAnB,I,SCtEd,EAtCoB,WAClB,OACE,SAACmE,EAAD,WACE,SAACE,EAAD,WAaE,wBACGK,EAAWlD,KAAI,gBAAGE,EAAH,EAAGA,KAAMT,EAAT,EAASA,MAAT,OACd,SAACuD,EAAD,WACE,UAACvE,EAAD,CAAY0B,GAAE,aAAQD,GAAtB,UACGT,EACA,gBAAG0D,EAAH,EAAGA,SAAH,EAAaC,UAAb,OACC,iBAAMC,UAAWF,EAAW,SAAW,GAAvC,UACE,SAAC,MAAD,KAFH,MAHUjD,EADD,SAmBzB,E,UCxCYoD,EAAcrF,EAAAA,GAAAA,QAAH,oEAGF,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,OAAO6E,UAAnB,IAGVM,EAAmBtF,EAAAA,GAAAA,IAAAA,OAAiB,SAAAuF,GAAC,MAAK,CACrDH,UAAW,YADqC,GAAlBpF,CAAH,wCAMhBwF,EAAiBxF,EAAAA,GAAAA,IAAH,8OAKY,SAAAC,GAAC,OAClCA,EAAEC,MAAMQ,YAAYE,MADc,IAKN,SAAAX,GAAC,OAAIA,EAAEC,MAAMQ,YAAYC,MAAxB,ICFnC,EAbiB,SAAC,GAAyB,IAAvBa,EAAsB,EAAtBA,MAAOyB,EAAe,EAAfA,SACzB,OACE,SAACoC,EAAD,WACE,SAACC,EAAD,WACE,UAACE,EAAD,YACE,SAAC,EAAD,KACA,SAACC,EAAA,EAAD,CAAWxC,SAAUA,EAAUzB,MAAOA,UAK/C,C,2NClBKkE,EAASC,mCAEfC,EAAAA,GAAAA,SAAAA,QAAyB,+BAElB,IAAM9B,EAAS,mCAAG,WAAOT,EAAKE,GAAZ,uEACnBJ,EAAS,KADU,KAGfE,EAHe,OAIhB,QAJgB,MAKhB,SALgB,OAWhB,YAXgB,MAYhB,cAZgB,MAahB,aAbgB,wCAMJuC,EAAAA,EAAAA,IAAM,CACnBC,IAAI,mBAAD,OAAqBxC,EAArB,oBAAoCqC,EAApC,iBAAmDnC,KAPrC,8BAoBnBJ,EApBmB,qDAcJyC,EAAAA,EAAAA,IAAM,CACnBC,IAAI,UAAD,OAAYxC,EAAZ,oBAA2BqC,EAA3B,iBAA0CnC,KAf5B,0BAoBJqC,EAAAA,EAAAA,IAAM,CACnBC,IAAI,yBAAD,OAA2BH,EAA3B,kBAA2CrC,EAA3C,iBAAuDE,KArBzC,iCA0BhBJ,EAAO2C,MA1BS,4CAAH,wDA6BTC,EAAY,mCAAG,WAAMC,GAAN,wFACNJ,EAAAA,EAAAA,IAAM,CACxBC,IAAI,UAAD,OAAYG,EAAZ,oBAA+BN,KAFV,cACpBvE,EADoB,yBAKnBA,EAAM2E,MALa,2CAAH,sDAQZG,EAAO,mCAAG,WAAMD,GAAN,wFACEJ,EAAAA,EAAAA,IAAM,CAC3BC,IAAI,UAAD,OAAYG,EAAZ,4BAAuCN,KAFvB,cACfQ,EADe,yBAKdA,EAASJ,KAAKK,MALA,2CAAH,sDAQPC,EAAU,mCAAG,WAAOJ,GAAP,4FAAgBzC,EAAhB,+BAAuB,EAAvB,UACFqC,EAAAA,EAAAA,IAAM,CAC1BC,IAAI,UAAD,OAAYG,EAAZ,4BAAuCN,EAAvC,iBAAsDnC,KAFnC,cAClB8C,EADkB,yBAKjBA,EAAQP,MALS,2CAAH,sDAQV1B,EAAS,mCAAG,qGACFwB,EAAAA,EAAAA,IAAM,CACzBC,IAAI,6BAAD,OAA+BH,KAFb,cACjBtE,EADiB,yBAKhBA,EAAO0E,MALS,2CAAH,qDAQTxD,EAAS,SAAAgE,GAAO,mDACWA,EADX,C","sources":["components/MoviesCard/MoviesCard.styled.js","components/MoviesCard/MoviesCard.jsx","components/MoviesBox/MoviesBox.styled.js","components/MoviesBox/MoviesBox.jsx","components/ControlsBar/ControlsBar.styled.js","components/ControlsBar/ControlsBar.jsx","pages/HomePage/HomePage.styled.js","pages/HomePage/HomePage.jsx","services/moviesApi.js"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const MovieItem = styled.li`\n  /* max-width: 400px; */\n  display: flex;\n  flex-direction: column;\n  gap: 0.5rem;\n\n  color: ${p => p.theme.colors.text};\n\n  transition: color ${p => p.theme.transitions.main};\n\n  :hover {\n    color: ${p => p.theme.colors.accent};\n  }\n`;\n\nexport const StyledLink = styled(NavLink)`\n  color: inherit;\n\n  & > img {\n    min-height: 100px;\n\n    @media screen and (min-width: ${p => p.theme.breakpoints.mobile}) {\n    }\n\n    @media screen and (min-width: ${p => p.theme.breakpoints.tablet}) {\n    }\n\n    @media screen and (min-width: ${p => p.theme.breakpoints.pc}) {\n      /* min-height: 300px; */\n    }\n  }\n`;\n\nexport const CardTitle = styled.h4`\n  font-size: ${p => p.theme.fontSizes[4]};\n  font-family: ${p => p.theme.fonts.heading};\n  padding: 0.375rem 0;\n`;\n\nexport const CardText = styled.p`\n  font-size: ${p => p.theme.fontSizes[2]};\n  font-style: italic;\n  padding: 0.125rem 0;\n`;\n","import { useLocation } from 'react-router-dom';\n\nimport { getImg } from 'services/moviesApi';\n\nimport {\n  MovieItem,\n  StyledLink,\n  CardTitle,\n  CardText,\n} from './MoviesCard.styled';\n\nconst MoviesCard = ({ movie, genres }) => {\n  const location = useLocation();\n\n  const { id, title, release_date, poster_path, genre_ids } = movie;\n\n  const movieGenres = genres\n    .filter(({ id }) => genre_ids.includes(id))\n    .map(genre => genre.name);\n\n  return (\n    <MovieItem>\n      <StyledLink to={`../movies/${id}`} state={{ from: location }}>\n        <img src={getImg(poster_path)} alt={title} />\n        <CardTitle>{title}</CardTitle>\n        <CardText>{movieGenres.join(', ')}</CardText>\n        <CardText>{release_date}</CardText>\n      </StyledLink>\n    </MovieItem>\n  );\n};\n\nexport default MoviesCard;\n","import styled from 'styled-components';\n\nexport const MoviesContainer = styled.div`\n  padding-top: 5rem;\n  padding-bottom: 2.5rem;\n  padding-left: 3.375rem;\n  width: 100%;\n\n  @media screen and (min-width: ${p => p.theme.breakpoints.tablet}) {\n    padding-left: 0.9375rem;\n  }\n\n  @media screen and (min-width: ${p => p.theme.breakpoints.pc}) {\n    padding-top: 5.5rem;\n  }\n`;\n\nexport const MoviesTitle = styled.h1`\n  margin-bottom: 1rem;\n  font-family: ${p => p.theme.fonts.heading};\n  font-weight: ${p => p.theme.fontWeights.heading};\n  color: ${p => p.theme.colors.white};\n\n  @media screen and (min-width: ${p => p.theme.breakpoints.pc}) {\n    margin-bottom: 1.5rem;\n  }\n`;\n\nexport const MoviesList = styled.ul`\n  margin: 0 auto;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 1rem;\n\n  & > li {\n    flex-basis: calc((100% - 1rem) / 2);\n\n    @media screen and (min-width: ${p => p.theme.breakpoints.mobile}) {\n      flex-basis: calc((100% - 2rem) / 3);\n    }\n\n    @media screen and (min-width: ${p => p.theme.breakpoints.tablet}) {\n      flex-basis: calc((100% - 3rem) / 4);\n    }\n\n    @media screen and (min-width: ${p => p.theme.breakpoints.pc}) {\n      flex-basis: calc((100% - 4rem) / 5);\n    }\n  }\n`;\n\nexport const BtnBox = styled.li`\n  display: flex;\n  align-items: flex-end;\n`;\n\nexport const LoadMoreBtn = styled.button`\n  padding: 0.5rem 1.5rem;\n  width: 100%;\n\n  color: ${p => p.theme.colors.text};\n  border: none;\n  border-radius: 1.5rem;\n  background-color: ${p => p.theme.colors.secondary};\n\n  cursor: pointer;\n\n  transition: color ${p => p.theme.transitions.main};\n\n  :hover,\n  :focus-visible {\n    color: ${p => p.theme.colors.accent};\n  }\n`;\n","import { useState, useEffect } from 'react';\n\nimport MoviesCard from 'components/MoviesCard';\n\nimport {\n  MoviesContainer,\n  MoviesTitle,\n  MoviesList,\n  BtnBox,\n  LoadMoreBtn,\n} from './MoviesBox.styled';\n\nimport { getMovies, getGenres } from 'services/moviesApi';\n\nconst MoviesBox = ({ movieRef, title }) => {\n  const [movies, setMovies] = useState([]);\n  const [ref, setRef] = useState('');\n  const [page, setPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(null);\n  const [genres, setGenres] = useState([]);\n\n  useEffect(() => {\n    const searchMovies = async () => {\n      try {\n        const { results, total_pages } = await getMovies(ref, page);\n        setMovies(prevMovies => [...prevMovies, ...results]);\n        console.log(results);\n        setTotalPages(total_pages);\n        const { genres } = await getGenres();\n        setGenres(genres);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    if (!movieRef) {\n      return;\n    }\n\n    if (ref !== movieRef) {\n      setMovies([]);\n      setRef(movieRef);\n      setPage(1);\n      return;\n    }\n\n    searchMovies();\n  }, [movieRef, page, ref]);\n\n  const onLoadMore = () => {\n    setPage(prevPage => prevPage + 1);\n  };\n\n  let lastPage = totalPages - page;\n\n  return (\n    <MoviesContainer>\n      <MoviesTitle>{title}</MoviesTitle>\n\n      <MoviesList>\n        {movies.map(movie => (\n          <MoviesCard key={movie.id} movie={movie} genres={genres} />\n        ))}\n        <BtnBox>\n          {movies.length > 0 && lastPage > 0 && (\n            <LoadMoreBtn type=\"button\" onClick={() => onLoadMore()}>\n              Load more\n            </LoadMoreBtn>\n          )}\n        </BtnBox>\n      </MoviesList>\n    </MoviesContainer>\n  );\n};\n\nexport default MoviesBox;\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Aside = styled.aside`\n  position: fixed;\n  top: 0;\n  padding-top: 4rem;\n  padding-bottom: 1.5rem;\n  height: 100vh;\n  display: block;\n\n  background-color: ${p => p.theme.colors.muted};\n\n  @media screen and (max-width: calc(${p =>\n      p.theme.breakpoints.tablet} - 0.0375rem)) {\n    /* left: 0; */\n\n    transform: translateX(calc(-100% + 44px));\n    /* transform: translateX(-100%); */\n\n    transition: transform ${p => p.theme.transitions.main};\n\n    &:hover {\n      transform: translateX(0);\n    }\n  }\n\n  @media screen and (min-width: ${p => p.theme.breakpoints.tablet}) {\n    position: sticky;\n  }\n`;\n\nexport const Controls = styled.nav`\n  padding-top: 3.5rem;\n  padding-bottom: 3.5rem;\n  /* padding-left: 0.25rem; */\n  width: ${p => p.theme.sizes.aside};\n\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n\n  overflow-y: auto;\n\n  /* padding-top: 1rem;\n  padding-bottom: 1rem;\n\n  @media screen and (min-width: ${p => p.theme.breakpoints.mobile}) {\n    padding-top: 1.5rem;\n    padding-bottom: 1.5rem;\n  }\n\n  @media screen and (min-width: ${p => p.theme.breakpoints.pc}) {\n    padding-top: 3.5rem;\n    padding-bottom: 3.5rem;\n  } */\n`;\n\nexport const MenuItem = styled.li`\n  position: relative;\n  padding-left: 0.25rem;\n  padding-right: 48px;\n\n  max-width: ${p => p.theme.sizes.aside};\n  width: 100%;\n`;\n\nexport const StyledLink = styled(NavLink)`\n  max-width: ${p => p.theme.sizes.aside};\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 1rem 0rem 1rem 1.25rem;\n  color: ${p => p.theme.colors.text};\n\n  transition: color ${p => p.theme.transitions.main},\n    background-color ${p => p.theme.transitions.main};\n\n  & > span {\n    position: absolute;\n    top: 0;\n    right: 0;\n    width: 44px;\n    height: 100%;\n\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    color: #535a5f;\n    background-color: ${p => p.theme.colors.background};\n    opacity: 0;\n\n    pointer-events: none;\n\n    transition: opacity ${p => p.theme.transitions.main};\n    /* transition: opacity 500ms cubic-bezier(0.4, 0, 0.2, 1); */\n\n    &.active {\n      opacity: 1;\n    }\n  }\n\n  &.active {\n    background-color: ${p => p.theme.colors.background};\n    color: ${p => p.theme.colors.secondary};\n\n    /* & > span {\n      opacity: 1;\n    } */\n  }\n\n  :hover:not(.active),\n  :focus-visible:not(.active) {\n    color: ${p => p.theme.colors.accent};\n  }\n`;\n","import { HiOutlineArrowNarrowRight } from 'react-icons/hi';\n\nimport moviesRefs from 'data/moviesRefs.json';\n\nimport { Aside, Controls, MenuItem, StyledLink } from './ControlsBar.styled';\n\nconst ControlsBar = () => {\n  return (\n    <Aside>\n      <Controls>\n        {/* <ToggleMenuBtn\n          type=\"button\"\n          aria-controls=\"navigation-menu\"\n          aria-expanded={isOpen}\n          onClick={() => toggleMenu()}\n          ref={MenuBtn}\n          // {...props}\n        >\n          <span aria-label=\"mobile menu switch\">\n            {!isOpen ? <IoMenuOutline /> : <IoCloseOutline />}\n          </span>\n        </ToggleMenuBtn> */}\n        <ul>\n          {moviesRefs.map(({ name, title }) => (\n            <MenuItem key={name}>\n              <StyledLink to={`../${name}`}>\n                {title}\n                {({ isActive, isPending }) => (\n                  <span className={isActive ? 'active' : ''}>\n                    <HiOutlineArrowNarrowRight />\n                  </span>\n                )}\n                {/* <span>\n                  <HiOutlineArrowNarrowRight />\n                </span> */}\n              </StyledLink>\n            </MenuItem>\n          ))}\n        </ul>\n      </Controls>\n    </Aside>\n  );\n};\n\nexport default ControlsBar;\n","import styled from 'styled-components';\n\nexport const PageSection = styled.section`\n  width: 100%;\n\n  background-color: ${p => p.theme.colors.background};\n`;\n\nexport const SectionContainer = styled.div.attrs(_ => ({\n  className: 'container',\n}))`\n  width: 100%;\n`;\n\nexport const SectionWrapper = styled.div`\n  position: relative;\n  width: 100%;\n  display: flex;\n\n  @media screen and (max-width: calc(${p =>\n      p.theme.breakpoints.tablet} - 0.0375rem)) {\n    overflow-y: hidden;\n  }\n\n  @media screen and (min-width: ${p => p.theme.breakpoints.mobile}) {\n    display: flex;\n  }\n`;\n","import ControlsBar from 'components/ControlsBar';\nimport MoviesBox from 'components/MoviesBox';\n\nimport {\n  PageSection,\n  SectionContainer,\n  SectionWrapper,\n} from './HomePage.styled';\n\nconst HomePage = ({ title, movieRef }) => {\n  return (\n    <PageSection>\n      <SectionContainer>\n        <SectionWrapper>\n          <ControlsBar />\n          <MoviesBox movieRef={movieRef} title={title} />\n        </SectionWrapper>\n      </SectionContainer>\n    </PageSection>\n  );\n};\n\nexport default HomePage;\n","import axios from 'axios';\n\nconst apiKey = process.env.REACT_APP_API_KEY;\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getMovies = async (ref, page) => {\n  let movies = null;\n\n  switch (ref) {\n    case 'day':\n    case 'week':\n      movies = await axios({\n        url: `/trending/movie/${ref}?api_key=${apiKey}&page=${page}`,\n      });\n      break;\n\n    case 'popular':\n    case 'top_rated':\n    case 'upcoming':\n      movies = await axios({\n        url: `/movie/${ref}?api_key=${apiKey}&page=${page}`,\n      });\n      break;\n\n    default:\n      movies = await axios({\n        url: `/search/movie?api_key=${apiKey}&query=${ref}&page=${page}`,\n      });\n      break;\n  }\n\n  return movies.data;\n};\n\nexport const getMovieById = async movieId => {\n  const movie = await axios({\n    url: `/movie/${movieId}?api_key=${apiKey}`,\n  });\n\n  return movie.data;\n};\n\nexport const getCast = async movieId => {\n  const castData = await axios({\n    url: `/movie/${movieId}/credits?api_key=${apiKey}`,\n  });\n\n  return castData.data.cast;\n};\n\nexport const getReviews = async (movieId, page = 1) => {\n  const reviews = await axios({\n    url: `/movie/${movieId}/reviews?api_key=${apiKey}&page=${page}`,\n  });\n\n  return reviews.data;\n};\n\nexport const getGenres = async () => {\n  const genres = await axios({\n    url: `/genre/movie/list?api_key=${apiKey}`,\n  });\n\n  return genres.data;\n};\n\nexport const getImg = imgPath =>\n  `https://image.tmdb.org/t/p/original${imgPath}`;\n"],"names":["MovieItem","styled","p","theme","colors","text","transitions","main","accent","StyledLink","NavLink","breakpoints","mobile","tablet","pc","CardTitle","fontSizes","fonts","heading","CardText","movie","genres","location","useLocation","id","title","release_date","poster_path","genre_ids","movieGenres","filter","includes","map","genre","name","to","state","from","src","getImg","alt","join","MoviesContainer","MoviesTitle","fontWeights","white","MoviesList","BtnBox","LoadMoreBtn","secondary","movieRef","useState","movies","setMovies","ref","setRef","page","setPage","totalPages","setTotalPages","setGenres","useEffect","searchMovies","getMovies","results","total_pages","prevMovies","console","log","getGenres","lastPage","length","type","onClick","prevPage","Aside","muted","Controls","sizes","aside","MenuItem","background","moviesRefs","isActive","isPending","className","PageSection","SectionContainer","_","SectionWrapper","MoviesBox","apiKey","process","axios","url","data","getMovieById","movieId","getCast","castData","cast","getReviews","reviews","imgPath"],"sourceRoot":""}