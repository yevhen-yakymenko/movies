{"version":3,"file":"static/js/964.99dd0a5c.chunk.js","mappings":"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","sources":["components/Box/Box.js","components/MovieCard/MovieCard.styled.js","components/MovieCard/MovieCard.jsx","components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","components/MoviesBox/MoviesBox.styled.js","components/MoviesBox/MoviesBox.jsx","components/ControlsBar/ControlsBar.styled.js","components/ControlsBar/ControlsBar.jsx","pages/HomePage/HomePage.styled.js","pages/HomePage/HomePage.jsx","services/moviesApi.js"],"sourcesContent":["import styled from 'styled-components';\nimport {\n  color,\n  space,\n  layout,\n  flexbox,\n  background,\n  border,\n  position,\n} from 'styled-system';\n\nconst Box = styled('div')(\n  color,\n  space,\n  layout,\n  flexbox,\n  background,\n  border,\n  position\n);\n\nexport default Box;\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const MovieItem = styled.li`\n  flex-basis: calc((100% - 80px) / 6);\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n\n  color: ${p => p.theme.colors.white};\n\n  :hover {\n    color: ${p => p.theme.colors.accent};\n  }\n`;\n\nexport const StyledLink = styled(NavLink)`\n  color: inherit;\n`;\n\nexport const CardTitle = styled.h4`\n  font-family: ${p => p.theme.fonts.heading};\n`;\n\nexport const CardText = styled.p``;\n","import { useLocation } from 'react-router-dom';\n\nimport { getImg } from 'services/moviesApi';\n\nimport { MovieItem, StyledLink, CardTitle, CardText } from './MovieCard.styled';\n\nconst MovieCard = ({ movie }) => {\n  const location = useLocation();\n\n  const { id, title, release_date, poster_path } = movie;\n\n  return (\n    <MovieItem>\n      <StyledLink to={`../movies/${id}`} state={{ from: location }}>\n        <img src={getImg(poster_path)} alt={title} />\n        <CardTitle>{title}</CardTitle>\n        <CardText>{release_date}</CardText>\n      </StyledLink>\n    </MovieItem>\n  );\n};\n\nexport default MovieCard;\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  margin: 0 auto;\n  gap: 16px;\n`;\n","import MovieCard from 'components/MovieCard';\n\nimport { List } from './MoviesList.styled';\n\nconst MoviesList = ({ movies, lastPage, loadMore }) => {\n  return (\n    <List>\n      {movies.map(movie => (\n        <MovieCard key={movie.id} movie={movie} />\n      ))}\n      <li>\n        {movies.length > 0 && lastPage > 0 && (\n          <button type=\"button\" onClick={() => loadMore()}>\n            Load more\n          </button>\n        )}\n      </li>\n    </List>\n  );\n};\n\nexport default MoviesList;\n","import styled from 'styled-components';\n\nexport const MoviesContainer = styled.div`\n  flex-basis: content;\n  background-color: ${p => p.theme.colors.background};\n  padding: 40px 24px;\n  overflow-y: scroll;\n`;\n","import { useState, useEffect } from 'react';\n\nimport MoviesList from 'components/MoviesList';\n// import Box from 'components/Box';\nimport { MoviesContainer } from './MoviesBox.styled';\n\nimport { getMovies } from 'services/moviesApi';\n\nconst MoviesBox = ({ movieRef, children }) => {\n  const [movies, setMovies] = useState([]);\n  const [ref, setRef] = useState('');\n  const [page, setPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(null);\n\n  useEffect(() => {\n    const searchMovies = async () => {\n      try {\n        const { results, total_pages } = await getMovies(ref, page);\n        setMovies(prevMovies => [...prevMovies, ...results]);\n        setTotalPages(total_pages);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    if (!movieRef) {\n      return;\n    }\n\n    if (ref !== movieRef) {\n      setMovies([]);\n      setRef(movieRef);\n      setPage(1);\n      return;\n    }\n\n    searchMovies();\n  }, [movieRef, page, ref]);\n\n  const onLoadMore = () => {\n    setPage(prevPage => prevPage + 1);\n  };\n\n  let onLastPage = totalPages - page;\n\n  return (\n    <MoviesContainer>\n      {children}\n\n      <MoviesList movies={movies} lastPage={onLastPage} loadMore={onLoadMore} />\n    </MoviesContainer>\n  );\n};\n\nexport default MoviesBox;\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\nimport { HiOutlineArrowNarrowRight } from 'react-icons/hi';\n\nexport const Controls = styled.nav`\n  flex-basis: 240px;\n  min-width: 240px;\n  padding-top: 48px;\n  display: flex;\n  flex-direction: column;\n  background-color: ${p => p.theme.colors.muted};\n`;\n\nexport const StyledLink = styled(NavLink)`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 16px 8px 16px 40px;\n  color: ${p => p.theme.colors.white};\n\n  &.active {\n    background-color: ${p => p.theme.colors.background};\n    color: ${p => p.theme.colors.secondary};\n  }\n\n  :hover:not(.active),\n  :focus-visible:not(.active) {\n    color: ${p => p.theme.colors.accent};\n  }\n`;\n\nexport const ArrowRightIcon = styled(HiOutlineArrowNarrowRight)`\n  display: none;\n\n  ${StyledLink}.active & {\n    color: #535a5f;\n    display: block;\n  }\n`;\n","import { Controls, StyledLink, ArrowRightIcon } from './ControlsBar.styled';\n\nimport moviesRefs from 'data/moviesRefs.json';\n\nconst ControlsBar = () => {\n  return (\n    <Controls>\n      {moviesRefs.map(({ name, title }) => (\n        <StyledLink key={name} to={`../${name}`}>\n          {title} <ArrowRightIcon />\n        </StyledLink>\n      ))}\n    </Controls>\n  );\n};\n\nexport default ControlsBar;\n","import styled from 'styled-components';\n\nexport const PageTitle = styled.h1`\n  margin-bottom: 40px;\n  font-family: ${p => p.theme.fonts.heading};\n  font-weight: ${p => p.theme.fontWeights.heading};\n  color: ${p => p.theme.colors.white};\n`;\n","import ControlsBar from 'components/ControlsBar';\nimport MoviesBox from 'components/MoviesBox';\nimport Box from 'components/Box';\n\nimport { PageTitle } from './HomePage.styled';\n\nconst HomePage = ({ title, movieRef }) => {\n  return (\n    <Box as=\"main\" display=\"flex\" height=\"100vh\" pt=\"64px\">\n      <ControlsBar />\n      <MoviesBox movieRef={movieRef}>\n        <PageTitle>{title}</PageTitle>\n      </MoviesBox>\n    </Box>\n  );\n};\n\nexport default HomePage;\n","import axios from 'axios';\n\nconst apiKey = 'f6621a4453f011cfb432a7f58c4cc70b';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getMovies = async (ref, page) => {\n  let movies = null;\n\n  switch (ref) {\n    case 'day':\n    case 'week':\n      movies = await axios({\n        url: `/trending/movie/${ref}?api_key=${apiKey}&page=${page}`,\n      });\n      break;\n\n    case 'popular':\n    case 'top_rated':\n    case 'upcoming':\n      movies = await axios({\n        url: `/movie/${ref}?api_key=${apiKey}&page=${page}`,\n      });\n      break;\n\n    default:\n      movies = await axios({\n        url: `/search/movie?api_key=${apiKey}&query=${ref}&page=${page}`,\n      });\n      break;\n  }\n\n  return movies.data;\n};\n\nexport const getMovieById = async movieId => {\n  const movie = await axios({\n    url: `/movie/${movieId}?api_key=${apiKey}`,\n  });\n\n  return movie.data;\n};\n\nexport const getCast = async movieId => {\n  const castData = await axios({\n    url: `/movie/${movieId}/credits?api_key=${apiKey}`,\n  });\n\n  return castData.data.cast;\n};\n\nexport const getReviews = async (movieId, page = 1) => {\n  const reviews = await axios({\n    url: `/movie/${movieId}/reviews?api_key=${apiKey}&page=${page}`,\n  });\n\n  return reviews.data;\n};\n\nexport const getGenres = async () => {\n  const genres = await axios({\n    url: `/genre/movie/list?api_key=${apiKey}`,\n  });\n\n  return genres;\n};\n\nexport const getImg = imgPath =>\n  `https://image.tmdb.org/t/p/original${imgPath}`;\n"],"names":["styled","color","space","layout","flexbox","background","border","position","MovieItem","p","theme","colors","white","accent","StyledLink","NavLink","CardTitle","fonts","heading","CardText","movie","location","useLocation","id","title","release_date","poster_path","to","state","from","src","getImg","alt","List","movies","lastPage","loadMore","map","length","type","onClick","MoviesContainer","movieRef","children","useState","setMovies","ref","setRef","page","setPage","totalPages","setTotalPages","useEffect","searchMovies","getMovies","results","total_pages","prevMovies","console","log","onLastPage","prevPage","Controls","muted","secondary","ArrowRightIcon","HiOutlineArrowNarrowRight","moviesRefs","name","PageTitle","fontWeights","Box","as","display","height","pt","MoviesBox","apiKey","axios","url","data","getMovieById","movieId","getCast","castData","cast","getReviews","reviews","imgPath"],"sourceRoot":""}