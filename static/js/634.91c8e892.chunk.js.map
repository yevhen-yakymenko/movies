{"version":3,"file":"static/js/634.91c8e892.chunk.js","mappings":"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","sources":["components/Box/Box.js","components/MovieCard/MovieCard.styled.js","components/MovieCard/MovieCard.jsx","components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","components/MoviesBox/MoviesBox.styled.js","components/MoviesBox/MoviesBox.jsx","components/SearchBox/SearchBox.styled.js","components/SearchBox/SearchBox.jsx","pages/SearchPage/SearchPage.jsx","services/moviesApi.js"],"sourcesContent":["import styled from 'styled-components';\nimport {\n  color,\n  space,\n  layout,\n  flexbox,\n  background,\n  border,\n  position,\n} from 'styled-system';\n\nconst Box = styled('div')(\n  color,\n  space,\n  layout,\n  flexbox,\n  background,\n  border,\n  position\n);\n\nexport default Box;\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const MovieItem = styled.li`\n  flex-basis: calc((100% - 64px) / 5);\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  /* background-color: ${p => p.theme.colors.muted}; */\n\n  color: ${p => p.theme.colors.white};\n\n  :hover {\n    color: ${p => p.theme.colors.accent};\n  }\n`;\n\nexport const StyledLink = styled(NavLink)`\n  color: inherit;\n`;\n\nexport const CardTitle = styled.h4`\n  font-size: ${p => p.theme.fontSizes[4]}px;\n  font-family: ${p => p.theme.fonts.heading};\n  padding: 6px 0;\n`;\n\nexport const CardText = styled.p`\n  font-size: ${p => p.theme.fontSizes[2]}px;\n  font-style: italic;\n  padding: 2px 0;\n`;\n","import { useLocation } from 'react-router-dom';\n\nimport { getImg } from 'services/moviesApi';\n\nimport { MovieItem, StyledLink, CardTitle, CardText } from './MovieCard.styled';\n\nconst MovieCard = ({ movie, genres }) => {\n  const location = useLocation();\n\n  const { id, title, release_date, poster_path, genre_ids } = movie;\n\n  const movieGenres = genres\n    .filter(({ id }) => genre_ids.includes(id))\n    .map(genre => genre.name);\n\n  return (\n    <MovieItem>\n      <StyledLink to={`../movies/${id}`} state={{ from: location }}>\n        <img src={getImg(poster_path)} alt={title} />\n        <CardTitle>{title}</CardTitle>\n        <CardText>{movieGenres.join(', ')}</CardText>\n        <CardText>{release_date}</CardText>\n      </StyledLink>\n    </MovieItem>\n  );\n};\n\nexport default MovieCard;\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  margin: 0 auto;\n  gap: 16px;\n`;\n","import MovieCard from 'components/MovieCard';\n\nimport { List } from './MoviesList.styled';\n\nconst MoviesList = ({ movies, genres, lastPage, loadMore }) => {\n  return (\n    <List>\n      {movies.map(movie => (\n        <MovieCard key={movie.id} movie={movie} genres={genres} />\n      ))}\n      <li>\n        {movies.length > 0 && lastPage > 0 && (\n          <button type=\"button\" onClick={() => loadMore()}>\n            Load more\n          </button>\n        )}\n      </li>\n    </List>\n  );\n};\n\nexport default MoviesList;\n","import styled from 'styled-components';\n\nexport const MoviesContainer = styled.div`\n  flex-basis: content;\n  background-color: ${p => p.theme.colors.background};\n  padding: 40px 24px;\n  overflow-y: scroll;\n`;\n","import { useState, useEffect } from 'react';\n\nimport MoviesList from 'components/MoviesList';\n// import Box from 'components/Box';\nimport { MoviesContainer } from './MoviesBox.styled';\n\nimport { getMovies, getGenres } from 'services/moviesApi';\n\nconst MoviesBox = ({ movieRef, children }) => {\n  const [movies, setMovies] = useState([]);\n  const [ref, setRef] = useState('');\n  const [page, setPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(null);\n  const [genres, setGenres] = useState([]);\n\n  useEffect(() => {\n    const searchMovies = async () => {\n      try {\n        const { results, total_pages } = await getMovies(ref, page);\n        setMovies(prevMovies => [...prevMovies, ...results]);\n        setTotalPages(total_pages);\n        const { genres } = await getGenres();\n        setGenres(genres);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    if (!movieRef) {\n      return;\n    }\n\n    if (ref !== movieRef) {\n      setMovies([]);\n      setRef(movieRef);\n      setPage(1);\n      return;\n    }\n\n    searchMovies();\n  }, [movieRef, page, ref]);\n\n  const onLoadMore = () => {\n    setPage(prevPage => prevPage + 1);\n  };\n\n  let onLastPage = totalPages - page;\n\n  return (\n    <MoviesContainer>\n      {children}\n\n      <MoviesList\n        movies={movies}\n        genres={genres}\n        lastPage={onLastPage}\n        loadMore={onLoadMore}\n      />\n    </MoviesContainer>\n  );\n};\n\nexport default MoviesBox;\n","import styled from 'styled-components';\n\nexport const SearchForm = styled.form`\n  width: 1280px;\n`;\n","import { useState } from 'react';\n\nimport { SearchForm } from './SearchBox.styled';\n\nconst SearchBox = ({ onSubmit }) => {\n  const [value, setValue] = useState('');\n\n  const handleChange = e => setValue(e.target.value);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    onSubmit(value);\n\n    const form = e.target;\n    form.reset();\n    setValue('');\n  };\n\n  return (\n    <>\n      <SearchForm onSubmit={handleSubmit}>\n        <input onChange={handleChange} name=\"search\" required />\n        <button type=\"submit\">Search</button>\n      </SearchForm>\n    </>\n  );\n};\n\nexport default SearchBox;\n\n// export const SearchBoxMain = () => {\n//   return (\n//     <form>\n//       <input />\n//       <button type=\"submit\">Search</button>\n//     </form>\n//   );\n// };\n","import { useSearchParams } from 'react-router-dom';\n\nimport Box from 'components/Box';\nimport MoviesBox from 'components/MoviesBox';\nimport SearchBox from 'components/SearchBox';\n\nconst SearchPage = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const onSearchMovie = request => {\n    setSearchParams({ request });\n  };\n\n  const serchRequets = searchParams.get('request');\n\n  return (\n    <Box as=\"main\" display=\"flex\" height=\"100vh\" minWidth=\"1280px\">\n      <MoviesBox movieRef={serchRequets}>\n        <SearchBox onSubmit={onSearchMovie} />\n      </MoviesBox>\n    </Box>\n  );\n};\n\nexport default SearchPage;\n","import axios from 'axios';\n\nconst apiKey = 'f6621a4453f011cfb432a7f58c4cc70b';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getMovies = async (ref, page) => {\n  let movies = null;\n\n  switch (ref) {\n    case 'day':\n    case 'week':\n      movies = await axios({\n        url: `/trending/movie/${ref}?api_key=${apiKey}&page=${page}`,\n      });\n      break;\n\n    case 'popular':\n    case 'top_rated':\n    case 'upcoming':\n      movies = await axios({\n        url: `/movie/${ref}?api_key=${apiKey}&page=${page}`,\n      });\n      break;\n\n    default:\n      movies = await axios({\n        url: `/search/movie?api_key=${apiKey}&query=${ref}&page=${page}`,\n      });\n      break;\n  }\n\n  return movies.data;\n};\n\nexport const getMovieById = async movieId => {\n  const movie = await axios({\n    url: `/movie/${movieId}?api_key=${apiKey}`,\n  });\n\n  return movie.data;\n};\n\nexport const getCast = async movieId => {\n  const castData = await axios({\n    url: `/movie/${movieId}/credits?api_key=${apiKey}`,\n  });\n\n  return castData.data.cast;\n};\n\nexport const getReviews = async (movieId, page = 1) => {\n  const reviews = await axios({\n    url: `/movie/${movieId}/reviews?api_key=${apiKey}&page=${page}`,\n  });\n\n  return reviews.data;\n};\n\nexport const getGenres = async () => {\n  const genres = await axios({\n    url: `/genre/movie/list?api_key=${apiKey}`,\n  });\n\n  return genres.data;\n};\n\nexport const getImg = imgPath =>\n  `https://image.tmdb.org/t/p/original${imgPath}`;\n"],"names":["styled","color","space","layout","flexbox","background","border","position","MovieItem","p","theme","colors","muted","white","accent","StyledLink","NavLink","CardTitle","fontSizes","fonts","heading","CardText","movie","genres","location","useLocation","id","title","release_date","poster_path","genre_ids","movieGenres","filter","includes","map","genre","name","to","state","from","src","getImg","alt","join","List","movies","lastPage","loadMore","length","type","onClick","MoviesContainer","movieRef","children","useState","setMovies","ref","setRef","page","setPage","totalPages","setTotalPages","setGenres","useEffect","searchMovies","getMovies","results","total_pages","prevMovies","getGenres","console","log","onLastPage","prevPage","SearchForm","onSubmit","value","setValue","e","preventDefault","target","reset","onChange","required","useSearchParams","searchParams","setSearchParams","serchRequets","get","Box","as","display","height","minWidth","MoviesBox","request","apiKey","axios","url","data","getMovieById","movieId","getCast","castData","cast","getReviews","reviews","imgPath"],"sourceRoot":""}