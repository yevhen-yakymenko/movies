{"version":3,"file":"static/js/65.e0a0aa49.chunk.js","mappings":"2JAqBA,GAVYA,EAAAA,EAAAA,IAAO,MAAPA,CACVC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,G,gLCfWC,EAAYR,EAAAA,GAAAA,GAASS,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,mLAMvB,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,IAAI,IAEb,SAAAH,GAAC,OAAIA,EAAEC,MAAMG,YAAYC,IAAI,IAGtC,SAAAL,GAAC,OAAIA,EAAEC,MAAMC,OAAOI,MAAM,IAI1BC,GAAalB,EAAAA,EAAAA,IAAOmB,EAAAA,GAAPnB,CAAeoB,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,kQAML,SAAAC,GAAC,OAAIA,EAAEC,MAAMS,YAAYC,MAAM,IAG/B,SAAAX,GAAC,OAAIA,EAAEC,MAAMS,YAAYE,MAAM,IAG/B,SAAAZ,GAAC,OAAIA,EAAEC,MAAMS,YAAYG,EAAE,IAMlDC,EAAYzB,EAAAA,GAAAA,GAAS0B,IAAAA,GAAAhB,EAAAA,EAAAA,GAAA,0EACnB,SAAAC,GAAC,OAAIA,EAAEC,MAAMe,UAAU,EAAE,IACvB,SAAAhB,GAAC,OAAIA,EAAEC,MAAMgB,MAAMC,OAAO,IAI9BC,EAAW9B,EAAAA,GAAAA,EAAQ+B,IAAAA,GAAArB,EAAAA,EAAAA,GAAA,4EACjB,SAAAC,GAAC,OAAIA,EAAEC,MAAMe,UAAU,EAAE,I,SCXxC,EArBmB,SAAHK,GAA2B,IAArBC,EAAKD,EAALC,MAAOC,EAAMF,EAANE,OACrBC,GAAWC,EAAAA,EAAAA,MAETC,EAAoDJ,EAApDI,GAAIC,EAAgDL,EAAhDK,MAAOC,EAAyCN,EAAzCM,aAAcC,EAA2BP,EAA3BO,YAAaC,EAAcR,EAAdQ,UAExCC,EAAcR,EACjBS,QAAO,SAAAC,GAAA,IAAGP,EAAEO,EAAFP,GAAE,OAAOI,EAAUI,SAASR,EAAG,IACzCS,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAI,IAE1B,OACEC,EAAAA,EAAAA,KAACzC,EAAS,CAAA0C,UACRC,EAAAA,EAAAA,MAACjC,EAAU,CAACkC,GAAE,aAAAC,OAAehB,GAAMiB,MAAO,CAAEC,KAAMpB,GAAWe,SAAA,EAC3DD,EAAAA,EAAAA,KAAA,OAAKO,KAAKC,EAAAA,EAAAA,IAAOjB,GAAckB,IAAKpB,KACpCW,EAAAA,EAAAA,KAACxB,EAAS,CAAAyB,SAAEZ,KACZW,EAAAA,EAAAA,KAACnB,EAAQ,CAAAoB,SAAER,EAAYiB,KAAK,SAC5BV,EAAAA,EAAAA,KAACnB,EAAQ,CAAAoB,SAAEX,QAInB,EC5BaqB,EAAkB5D,EAAAA,GAAAA,IAAUS,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,4PAMP,SAAAC,GAAC,OAAIA,EAAEC,MAAMS,YAAYE,MAAM,IAI/B,SAAAZ,GAAC,OAAIA,EAAEC,MAAMS,YAAYG,EAAE,IAKhDqC,EAAc7D,EAAAA,GAAAA,GAASoB,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,sKAEnB,SAAAC,GAAC,OAAIA,EAAEC,MAAMgB,MAAMC,OAAO,IAC1B,SAAAlB,GAAC,OAAIA,EAAEC,MAAMkD,YAAYjC,OAAO,IACtC,SAAAlB,GAAC,OAAIA,EAAEC,MAAMC,OAAOkD,KAAK,IAEF,SAAApD,GAAC,OAAIA,EAAEC,MAAMS,YAAYG,EAAE,IAKhDwC,EAAahE,EAAAA,GAAAA,GAAS0B,IAAAA,GAAAhB,EAAAA,EAAAA,GAAA,2aASC,SAAAC,GAAC,OAAIA,EAAEC,MAAMS,YAAYC,MAAM,IAI/B,SAAAX,GAAC,OAAIA,EAAEC,MAAMS,YAAYE,MAAM,IAI/B,SAAAZ,GAAC,OAAIA,EAAEC,MAAMS,YAAYG,EAAE,IAMlDyC,EAASjE,EAAAA,GAAAA,GAAS+B,IAAAA,GAAArB,EAAAA,EAAAA,GAAA,sDAKlBwD,EAAclE,EAAAA,GAAAA,OAAamE,IAAAA,GAAAzD,EAAAA,EAAAA,GAAA,oPAI7B,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,IAAI,IAGb,SAAAH,GAAC,OAAIA,EAAEC,MAAMC,OAAOuD,SAAS,IAI7B,SAAAzD,GAAC,OAAIA,EAAEC,MAAMG,YAAYC,IAAI,IAItC,SAAAL,GAAC,OAAIA,EAAEC,MAAMC,OAAOI,MAAM,ICIvC,EA7DkB,SAAHe,GAA6B,IAAvBqC,EAAQrC,EAARqC,SAAU/B,EAAKN,EAALM,MAC7BgC,GAA4BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjCI,EAAMF,EAAA,GAAEG,EAASH,EAAA,GACxBI,GAAsBL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA3BE,EAAGD,EAAA,GAAEE,EAAMF,EAAA,GAClBG,GAAwBT,EAAAA,EAAAA,UAAS,GAAEU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAA5BE,EAAID,EAAA,GAAEE,EAAOF,EAAA,GACpBG,GAAoCb,EAAAA,EAAAA,UAAS,MAAKc,GAAAZ,EAAAA,EAAAA,GAAAW,EAAA,GAA3CE,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAChCG,GAA4BjB,EAAAA,EAAAA,UAAS,IAAGkB,GAAAhB,EAAAA,EAAAA,GAAAe,EAAA,GAAjCtD,EAAMuD,EAAA,GAAEC,EAASD,EAAA,IAExBE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,eAAAhD,GAAAiD,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAP,EAAAA,EAAAA,KAAAQ,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAEsBC,EAAAA,EAAAA,IAAU5B,EAAKI,GAAM,KAAD,EAGhC,OAHgCe,EAAAM,EAAAI,KAAnDT,EAAOD,EAAPC,QAASC,EAAWF,EAAXE,YACjBxB,GAAU,SAAAiC,GAAU,SAAAvD,QAAAwD,EAAAA,EAAAA,GAAQD,IAAUC,EAAAA,EAAAA,GAAKX,GAAO,IAClDY,QAAQC,IAAIb,GACZX,EAAcY,GAAaI,EAAAE,KAAA,IACFO,EAAAA,EAAAA,MAAY,KAAD,GAAAZ,EAAAG,EAAAI,KAA5BzE,EAAMkE,EAANlE,OACRwD,EAAUxD,GAAQqE,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAU,GAAAV,EAAA,SAElBO,QAAQC,IAAGR,EAAAU,IAAQ,yBAAAV,EAAAW,OAAA,GAAAlB,EAAA,mBAEtB,kBAXiB,OAAApD,EAAAuE,MAAA,KAAAC,UAAA,KAalB,GAAK/C,EAIL,OAAIS,IAAQT,GACVM,EAAU,IACVI,EAAOV,QACPc,EAAQ,SAIVS,GACF,GAAG,CAACvB,EAAUa,EAAMJ,IAEpB,IAIIuC,EAAW/B,EAAaJ,EAE5B,OACE/B,EAAAA,EAAAA,MAACS,EAAe,CAAAV,SAAA,EACdD,EAAAA,EAAAA,KAACY,EAAW,CAAAX,SAAEZ,KAEda,EAAAA,EAAAA,MAACa,EAAU,CAAAd,SAAA,CACRwB,EAAO5B,KAAI,SAAAb,GAAK,OACfgB,EAAAA,EAAAA,KAACqE,EAAU,CAAgBrF,MAAOA,EAAOC,OAAQA,GAAhCD,EAAMI,GAAoC,KAE7DY,EAAAA,EAAAA,KAACgB,EAAM,CAAAf,SACJwB,EAAO6C,OAAS,GAAKF,EAAW,IAC/BpE,EAAAA,EAAAA,KAACiB,EAAW,CAACsD,KAAK,SAASC,QAAS,WAf5CtC,GAAQ,SAAAuC,GAAQ,OAAIA,EAAW,CAAC,GAe8B,EAACxE,SAAC,qBAQpE,C,mKCpEayE,GAFc3H,EAAAA,GAAAA,IAAUS,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,QAEXV,EAAAA,GAAAA,KAAWoB,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,uHAQxBkH,EAAc5H,EAAAA,GAAAA,MAAY0B,IAAAA,GAAAhB,EAAAA,EAAAA,GAAA,0OAEtB,SAAAC,GAAC,OAAIA,EAAEC,MAAMkD,YAAY+D,MAAM,IAC/B,SAAAlH,GAAC,OAAIA,EAAEC,MAAMkH,YAAYC,IAAI,IACnC,SAAApH,GAAC,OAAIA,EAAEC,MAAMC,OAAOmH,KAAK,IACd,SAAArH,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,IAAI,IAQjCmH,EAAejI,EAAAA,GAAAA,OAAa+B,IAAAA,GAAArB,EAAAA,EAAAA,GAAA,mLAGnB,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,OAAOuD,SAAS,IAOtC8D,GAAalI,EAAAA,EAAAA,IAAOmI,EAAAA,IAAPnI,CAAgBmE,IAAAA,GAAAzD,EAAAA,EAAAA,GAAA,yBAC/B,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,IAAI,I,SCEnC,EA9BkB,SAAHkB,GAAsB,IAAhBoG,EAAQpG,EAARoG,SACnB9D,GAA0BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/B+D,EAAK7D,EAAA,GAAE8D,EAAQ9D,EAAA,GActB,OACErB,EAAAA,EAAAA,MAACwE,EAAU,CAACS,SAXO,SAAAG,GACnBA,EAAEC,iBAEFJ,EAASC,GAEIE,EAAEE,OACVC,QACLJ,EAAS,GACX,EAGqCpF,SAAA,EACjCD,EAAAA,EAAAA,KAAC2E,EAAW,CACVJ,KAAK,OACLxE,KAAK,SACL2F,YAAY,mBACZC,WAAS,EACTC,UAAQ,EACRC,SApBe,SAAAP,GAAC,OAAID,EAASC,EAAEE,OAAOJ,MAAO,KAsB/CpF,EAAAA,EAAAA,KAACgF,EAAY,CAACT,KAAK,SAAQtE,UAAED,EAAAA,EAAAA,KAACiF,EAAU,CAACa,KAAK,aAGpD,ECnCaC,EAAgBhJ,EAAAA,GAAAA,IAAUS,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,yDAEjB,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,OAAOmH,KAAK,ICuB/C,EAnBmB,WACjB,IAAAiB,GAAwCC,EAAAA,EAAAA,MAAiBC,GAAA1E,EAAAA,EAAAA,GAAAwE,EAAA,GAAlDG,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GAM9BG,EAAeF,EAAaG,IAAI,WAEtC,OACEpG,EAAAA,EAAAA,MAACqG,EAAAA,EAAG,CAACC,GAAG,UAAUC,QAAQ,OAAOC,OAAO,OAAMzG,SAAA,EAC5CD,EAAAA,EAAAA,KAAC+F,EAAa,KACd/F,EAAAA,EAAAA,KAAC2G,EAAAA,EAAS,CAACvF,SAAUiF,EAAapG,UAChCD,EAAAA,EAAAA,KAAC4G,EAAS,CAACzB,SAVK,SAAA0B,GACpBT,EAAgB,CAAES,QAAAA,GACpB,QAYF,C,kNCvBMC,EAASC,mCAEfC,EAAAA,EAAAA,SAAAA,QAAyB,+BAElB,IAAMvD,EAAS,eAAA1E,GAAA6D,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAOlB,EAAKI,GAAI,IAAAR,EAAA,OAAAoB,EAAAA,EAAAA,KAAAQ,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACnC/B,EAAS,KAAI6B,EAAAU,GAETnC,EAAGyB,EAAAE,KACJ,QADIF,EAAAU,IAEJ,SADKV,EAAAU,GAAA,EAOL,YANMV,EAAAU,IAON,cADSV,EAAAU,IAET,aADWV,EAAAU,GADF,EAEC,uBAAAV,EAAAE,KAAA,GAPEwD,EAAAA,EAAAA,GAAM,CACnBC,IAAI,mBAAD7G,OAAqByB,EAAG,aAAAzB,OAAY0G,EAAM,UAAA1G,OAAS6B,KACrD,KAAD,EAQC,KAAD,GAMC,KAAD,GAFI,OAANR,EAAM6B,EAAAI,KAAAJ,EAAA4D,OAAA,YAdA,cAAA5D,EAAAE,KAAA,IAQSwD,EAAAA,EAAAA,GAAM,CACnBC,IAAI,UAAD7G,OAAYyB,EAAG,aAAAzB,OAAY0G,EAAM,UAAA1G,OAAS6B,KADzC,eAAAqB,EAAAE,KAAA,IAMSwD,EAAAA,EAAAA,GAAM,CACnBC,IAAI,yBAAD7G,OAA2B0G,EAAM,WAAA1G,OAAUyB,EAAG,UAAAzB,OAAS6B,KADtD,eAAAqB,EAAA4D,OAAA,SAMHzF,EAAO0F,MAAI,yBAAA7D,EAAAW,OAAA,GAAAlB,EAAA,KACnB,gBA3BqBqE,EAAAC,GAAA,OAAAtI,EAAAmF,MAAA,KAAAC,UAAA,KA6BTmD,EAAY,eAAA3H,GAAAiD,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAyE,EAAMC,GAAO,IAAAxI,EAAA,OAAA6D,EAAAA,EAAAA,KAAAQ,MAAA,SAAAoE,GAAA,cAAAA,EAAAlE,KAAAkE,EAAAjE,MAAA,cAAAiE,EAAAjE,KAAA,GACnBwD,EAAAA,EAAAA,GAAM,CACxBC,IAAI,UAAD7G,OAAYoH,EAAO,aAAApH,OAAY0G,KACjC,KAAD,EAFS,OAAL9H,EAAKyI,EAAA/D,KAAA+D,EAAAP,OAAA,SAIJlI,EAAMmI,MAAI,wBAAAM,EAAAxD,OAAA,GAAAsD,EAAA,KAClB,gBANwBG,GAAA,OAAA/H,EAAAuE,MAAA,KAAAC,UAAA,KAQZwD,EAAO,eAAAC,GAAAhF,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAA+E,EAAML,GAAO,IAAAM,EAAA,OAAAjF,EAAAA,EAAAA,KAAAQ,MAAA,SAAA0E,GAAA,cAAAA,EAAAxE,KAAAwE,EAAAvE,MAAA,cAAAuE,EAAAvE,KAAA,GACXwD,EAAAA,EAAAA,GAAM,CAC3BC,IAAI,UAAD7G,OAAYoH,EAAO,qBAAApH,OAAoB0G,KACzC,KAAD,EAFY,OAARgB,EAAQC,EAAArE,KAAAqE,EAAAb,OAAA,SAIPY,EAASX,KAAKa,MAAI,wBAAAD,EAAA9D,OAAA,GAAA4D,EAAA,KAC1B,gBANmBI,GAAA,OAAAL,EAAA1D,MAAA,KAAAC,UAAA,KAQP+D,EAAU,eAAAC,GAAAvF,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAsF,EAAOZ,GAAO,IAAAvF,EAAAoG,EAAAC,EAAAnE,UAAA,OAAAtB,EAAAA,EAAAA,KAAAQ,MAAA,SAAAkF,GAAA,cAAAA,EAAAhF,KAAAgF,EAAA/E,MAAA,OAAU,OAARvB,EAAIqG,EAAAhE,OAAA,QAAAkE,IAAAF,EAAA,GAAAA,EAAA,GAAG,EAACC,EAAA/E,KAAA,GAC1BwD,EAAAA,EAAAA,GAAM,CAC1BC,IAAI,UAAD7G,OAAYoH,EAAO,qBAAApH,OAAoB0G,EAAM,UAAA1G,OAAS6B,KACxD,KAAD,EAFW,OAAPoG,EAAOE,EAAA7E,KAAA6E,EAAArB,OAAA,SAINmB,EAAQlB,MAAI,wBAAAoB,EAAAtE,OAAA,GAAAmE,EAAA,KACpB,gBANsBK,GAAA,OAAAN,EAAAjE,MAAA,KAAAC,UAAA,KAQVJ,EAAS,eAAA2E,GAAA9F,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAA6F,IAAA,IAAA1J,EAAA,OAAA4D,EAAAA,EAAAA,KAAAQ,MAAA,SAAAuF,GAAA,cAAAA,EAAArF,KAAAqF,EAAApF,MAAA,cAAAoF,EAAApF,KAAA,GACFwD,EAAAA,EAAAA,GAAM,CACzBC,IAAI,6BAAD7G,OAA+B0G,KACjC,KAAD,EAFU,OAAN7H,EAAM2J,EAAAlF,KAAAkF,EAAA1B,OAAA,SAILjI,EAAOkI,MAAI,wBAAAyB,EAAA3E,OAAA,GAAA0E,EAAA,KACnB,kBANqB,OAAAD,EAAAxE,MAAA,KAAAC,UAAA,KAQT3D,EAAS,SAAAqI,GAAO,4CAAAzI,OACWyI,EAAO,C","sources":["components/Box/Box.js","components/MoviesCard/MoviesCard.styled.js","components/MoviesCard/MoviesCard.jsx","components/MoviesBox/MoviesBox.styled.js","components/MoviesBox/MoviesBox.jsx","components/SearchBox/SearchBox.styled.js","components/SearchBox/SearchBox.jsx","pages/SearchPage/SearchPage.styled.js","pages/SearchPage/SearchPage.jsx","services/moviesApi.js"],"sourcesContent":["import styled from 'styled-components';\nimport {\n  color,\n  space,\n  layout,\n  flexbox,\n  background,\n  border,\n  position,\n} from 'styled-system';\n\nconst Box = styled('div')(\n  color,\n  space,\n  layout,\n  flexbox,\n  background,\n  border,\n  position\n);\n\nexport default Box;\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const MovieItem = styled.li`\n  /* max-width: 400px; */\n  display: flex;\n  flex-direction: column;\n  gap: 0.5rem;\n\n  color: ${p => p.theme.colors.text};\n\n  transition: color ${p => p.theme.transitions.main};\n\n  :hover {\n    color: ${p => p.theme.colors.accent};\n  }\n`;\n\nexport const StyledLink = styled(NavLink)`\n  color: inherit;\n\n  & > img {\n    min-height: 100px;\n\n    @media screen and (min-width: ${p => p.theme.breakpoints.mobile}) {\n    }\n\n    @media screen and (min-width: ${p => p.theme.breakpoints.tablet}) {\n    }\n\n    @media screen and (min-width: ${p => p.theme.breakpoints.pc}) {\n      /* min-height: 300px; */\n    }\n  }\n`;\n\nexport const CardTitle = styled.h4`\n  font-size: ${p => p.theme.fontSizes[4]};\n  font-family: ${p => p.theme.fonts.heading};\n  padding: 0.375rem 0;\n`;\n\nexport const CardText = styled.p`\n  font-size: ${p => p.theme.fontSizes[2]};\n  font-style: italic;\n  padding: 0.125rem 0;\n`;\n","import { useLocation } from 'react-router-dom';\n\nimport { getImg } from 'services/moviesApi';\n\nimport {\n  MovieItem,\n  StyledLink,\n  CardTitle,\n  CardText,\n} from './MoviesCard.styled';\n\nconst MoviesCard = ({ movie, genres }) => {\n  const location = useLocation();\n\n  const { id, title, release_date, poster_path, genre_ids } = movie;\n\n  const movieGenres = genres\n    .filter(({ id }) => genre_ids.includes(id))\n    .map(genre => genre.name);\n\n  return (\n    <MovieItem>\n      <StyledLink to={`../movies/${id}`} state={{ from: location }}>\n        <img src={getImg(poster_path)} alt={title} />\n        <CardTitle>{title}</CardTitle>\n        <CardText>{movieGenres.join(', ')}</CardText>\n        <CardText>{release_date}</CardText>\n      </StyledLink>\n    </MovieItem>\n  );\n};\n\nexport default MoviesCard;\n","import styled from 'styled-components';\n\nexport const MoviesContainer = styled.div`\n  padding-top: 5rem;\n  padding-bottom: 2.5rem;\n  padding-left: 3.375rem;\n  width: 100%;\n\n  @media screen and (min-width: ${p => p.theme.breakpoints.tablet}) {\n    padding-left: 0.9375rem;\n  }\n\n  @media screen and (min-width: ${p => p.theme.breakpoints.pc}) {\n    padding-top: 5.5rem;\n  }\n`;\n\nexport const MoviesTitle = styled.h1`\n  margin-bottom: 1rem;\n  font-family: ${p => p.theme.fonts.heading};\n  font-weight: ${p => p.theme.fontWeights.heading};\n  color: ${p => p.theme.colors.white};\n\n  @media screen and (min-width: ${p => p.theme.breakpoints.pc}) {\n    margin-bottom: 1.5rem;\n  }\n`;\n\nexport const MoviesList = styled.ul`\n  margin: 0 auto;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 1rem;\n\n  & > li {\n    flex-basis: calc((100% - 1rem) / 2);\n\n    @media screen and (min-width: ${p => p.theme.breakpoints.mobile}) {\n      flex-basis: calc((100% - 2rem) / 3);\n    }\n\n    @media screen and (min-width: ${p => p.theme.breakpoints.tablet}) {\n      flex-basis: calc((100% - 3rem) / 4);\n    }\n\n    @media screen and (min-width: ${p => p.theme.breakpoints.pc}) {\n      flex-basis: calc((100% - 4rem) / 5);\n    }\n  }\n`;\n\nexport const BtnBox = styled.li`\n  display: flex;\n  align-items: flex-end;\n`;\n\nexport const LoadMoreBtn = styled.button`\n  padding: 0.5rem 1.5rem;\n  width: 100%;\n\n  color: ${p => p.theme.colors.text};\n  border: none;\n  border-radius: 1.5rem;\n  background-color: ${p => p.theme.colors.secondary};\n\n  cursor: pointer;\n\n  transition: color ${p => p.theme.transitions.main};\n\n  :hover,\n  :focus-visible {\n    color: ${p => p.theme.colors.accent};\n  }\n`;\n","import { useState, useEffect } from 'react';\n\nimport MoviesCard from 'components/MoviesCard';\n\nimport {\n  MoviesContainer,\n  MoviesTitle,\n  MoviesList,\n  BtnBox,\n  LoadMoreBtn,\n} from './MoviesBox.styled';\n\nimport { getMovies, getGenres } from 'services/moviesApi';\n\nconst MoviesBox = ({ movieRef, title }) => {\n  const [movies, setMovies] = useState([]);\n  const [ref, setRef] = useState('');\n  const [page, setPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(null);\n  const [genres, setGenres] = useState([]);\n\n  useEffect(() => {\n    const searchMovies = async () => {\n      try {\n        const { results, total_pages } = await getMovies(ref, page);\n        setMovies(prevMovies => [...prevMovies, ...results]);\n        console.log(results);\n        setTotalPages(total_pages);\n        const { genres } = await getGenres();\n        setGenres(genres);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    if (!movieRef) {\n      return;\n    }\n\n    if (ref !== movieRef) {\n      setMovies([]);\n      setRef(movieRef);\n      setPage(1);\n      return;\n    }\n\n    searchMovies();\n  }, [movieRef, page, ref]);\n\n  const onLoadMore = () => {\n    setPage(prevPage => prevPage + 1);\n  };\n\n  let lastPage = totalPages - page;\n\n  return (\n    <MoviesContainer>\n      <MoviesTitle>{title}</MoviesTitle>\n\n      <MoviesList>\n        {movies.map(movie => (\n          <MoviesCard key={movie.id} movie={movie} genres={genres} />\n        ))}\n        <BtnBox>\n          {movies.length > 0 && lastPage > 0 && (\n            <LoadMoreBtn type=\"button\" onClick={() => onLoadMore()}>\n              Load more\n            </LoadMoreBtn>\n          )}\n        </BtnBox>\n      </MoviesList>\n    </MoviesContainer>\n  );\n};\n\nexport default MoviesBox;\n","import styled from 'styled-components';\nimport { BiSearch } from 'react-icons/bi';\n\nexport const FormWrapper = styled.div``;\n\nexport const SearchForm = styled.form`\n  width: 75%;\n  align-self: center;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const SearchInput = styled.input`\n  width: 50%;\n  font-weight: ${p => p.theme.fontWeights.medium};\n  line-height: ${p => p.theme.lineHeights.body};\n  color: ${p => p.theme.colors.muted};\n  background-color: ${p => p.theme.colors.text};\n  border: none;\n  border-top-left-radius: 20px;\n  border-bottom-left-radius: 20px;\n  outline: none;\n  padding: 8px 16px;\n`;\n\nexport const SeacrhButton = styled.button`\n  display: flex;\n  padding: 8px;\n  background-color: ${p => p.theme.colors.secondary};\n  border: none;\n  border-top-right-radius: 20px;\n  border-bottom-right-radius: 20px;\n  cursor: pointer;\n`;\n\nexport const SearchIcon = styled(BiSearch)`\n  color: ${p => p.theme.colors.text};\n`;\n","import { useState } from 'react';\n\nimport {\n  SearchForm,\n  SearchInput,\n  SeacrhButton,\n  SearchIcon,\n} from './SearchBox.styled';\n\nconst SearchBox = ({ onSubmit }) => {\n  const [value, setValue] = useState('');\n\n  const handleChange = e => setValue(e.target.value);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    onSubmit(value);\n\n    const form = e.target;\n    form.reset();\n    setValue('');\n  };\n\n  return (\n    <SearchForm onSubmit={handleSubmit}>\n      <SearchInput\n        type=\"text\"\n        name=\"search\"\n        placeholder=\"Find a movies...\"\n        autofocus\n        required\n        onChange={handleChange}\n      />\n      <SeacrhButton type=\"submit\">{<SearchIcon size=\"24px\" />}</SeacrhButton>\n    </SearchForm>\n  );\n};\n\nexport default SearchBox;\n","import styled from 'styled-components';\n\nexport const NavigationBox = styled.div`\n  min-width: 240px;\n  background-color: ${p => p.theme.colors.muted};\n`;\n","import { useSearchParams } from 'react-router-dom';\n\nimport Box from 'components/Box';\nimport MoviesBox from 'components/MoviesBox';\nimport SearchBox from 'components/SearchBox';\n\nimport { NavigationBox } from './SearchPage.styled';\n\nconst SearchPage = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const onSearchMovie = request => {\n    setSearchParams({ request });\n  };\n\n  const serchRequets = searchParams.get('request');\n\n  return (\n    <Box as=\"section\" display=\"flex\" height=\"100%\">\n      <NavigationBox />\n      <MoviesBox movieRef={serchRequets}>\n        <SearchBox onSubmit={onSearchMovie} />\n      </MoviesBox>\n    </Box>\n  );\n};\n\nexport default SearchPage;\n","import axios from 'axios';\n\nconst apiKey = process.env.REACT_APP_API_KEY;\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getMovies = async (ref, page) => {\n  let movies = null;\n\n  switch (ref) {\n    case 'day':\n    case 'week':\n      movies = await axios({\n        url: `/trending/movie/${ref}?api_key=${apiKey}&page=${page}`,\n      });\n      break;\n\n    case 'popular':\n    case 'top_rated':\n    case 'upcoming':\n      movies = await axios({\n        url: `/movie/${ref}?api_key=${apiKey}&page=${page}`,\n      });\n      break;\n\n    default:\n      movies = await axios({\n        url: `/search/movie?api_key=${apiKey}&query=${ref}&page=${page}`,\n      });\n      break;\n  }\n\n  return movies.data;\n};\n\nexport const getMovieById = async movieId => {\n  const movie = await axios({\n    url: `/movie/${movieId}?api_key=${apiKey}`,\n  });\n\n  return movie.data;\n};\n\nexport const getCast = async movieId => {\n  const castData = await axios({\n    url: `/movie/${movieId}/credits?api_key=${apiKey}`,\n  });\n\n  return castData.data.cast;\n};\n\nexport const getReviews = async (movieId, page = 1) => {\n  const reviews = await axios({\n    url: `/movie/${movieId}/reviews?api_key=${apiKey}&page=${page}`,\n  });\n\n  return reviews.data;\n};\n\nexport const getGenres = async () => {\n  const genres = await axios({\n    url: `/genre/movie/list?api_key=${apiKey}`,\n  });\n\n  return genres.data;\n};\n\nexport const getImg = imgPath =>\n  `https://image.tmdb.org/t/p/original${imgPath}`;\n"],"names":["styled","color","space","layout","flexbox","background","border","position","MovieItem","_templateObject","_taggedTemplateLiteral","p","theme","colors","text","transitions","main","accent","StyledLink","NavLink","_templateObject2","breakpoints","mobile","tablet","pc","CardTitle","_templateObject3","fontSizes","fonts","heading","CardText","_templateObject4","_ref","movie","genres","location","useLocation","id","title","release_date","poster_path","genre_ids","movieGenres","filter","_ref2","includes","map","genre","name","_jsx","children","_jsxs","to","concat","state","from","src","getImg","alt","join","MoviesContainer","MoviesTitle","fontWeights","white","MoviesList","BtnBox","LoadMoreBtn","_templateObject5","secondary","movieRef","_useState","useState","_useState2","_slicedToArray","movies","setMovies","_useState3","_useState4","ref","setRef","_useState5","_useState6","page","setPage","_useState7","_useState8","totalPages","setTotalPages","_useState9","_useState10","setGenres","useEffect","searchMovies","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$getMovies","results","total_pages","_yield$getGenres","_genres","wrap","_context","prev","next","getMovies","sent","prevMovies","_toConsumableArray","console","log","getGenres","t0","stop","apply","arguments","lastPage","MoviesCard","length","type","onClick","prevPage","SearchForm","SearchInput","medium","lineHeights","body","muted","SeacrhButton","SearchIcon","BiSearch","onSubmit","value","setValue","e","preventDefault","target","reset","placeholder","autofocus","required","onChange","size","NavigationBox","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","serchRequets","get","Box","as","display","height","MoviesBox","SearchBox","request","apiKey","process","axios","url","abrupt","data","_x","_x2","getMovieById","_callee2","movieId","_context2","_x3","getCast","_ref3","_callee3","castData","_context3","cast","_x4","getReviews","_ref4","_callee4","reviews","_args4","_context4","undefined","_x5","_ref5","_callee5","_context5","imgPath"],"sourceRoot":""}