{"version":3,"file":"static/js/35.22f0869d.chunk.js","mappings":"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","sources":["components/Box/Box.js","components/MovieCard/MovieCard.styled.js","components/MovieCard/MovieCard.jsx","components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","components/MoviesBox/MoviesBox.jsx","pages/HomePage/HomePage.jsx","services/moviesApi.js"],"sourcesContent":["import styled from 'styled-components';\nimport {\n  color,\n  space,\n  layout,\n  flexbox,\n  background,\n  border,\n  position,\n} from 'styled-system';\n\nconst Box = styled('div')(\n  color,\n  space,\n  layout,\n  flexbox,\n  background,\n  border,\n  position\n);\n\nexport default Box;\n","import styled from 'styled-components';\n\nexport const MovieItem = styled.li`\n  width: 240px;\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n`;\n","import { NavLink, useLocation } from 'react-router-dom';\n\nimport { getImg } from 'services/moviesApi';\n\nimport { MovieItem } from './MovieCard.styled';\n\nconst MovieCard = ({ movie }) => {\n  const location = useLocation();\n\n  const { id, title, release_date, poster_path } = movie;\n\n  return (\n    <MovieItem>\n      <NavLink to={`../movies/${id}`} state={{ from: location }}>\n        <img src={getImg(poster_path)} alt={title} />\n        <h4>{title}</h4>\n        <p>{release_date}</p>\n      </NavLink>\n    </MovieItem>\n  );\n};\n\nexport default MovieCard;\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  gap: 16px;\n`;\n","import MovieCard from 'components/MovieCard';\n\nimport { List } from './MoviesList.styled';\n\nconst MoviesList = ({ movies }) => {\n  return (\n    <List>\n      {movies.map(movie => (\n        <MovieCard key={movie.id} movie={movie} />\n      ))}\n    </List>\n  );\n};\n\nexport default MoviesList;\n","import MoviesList from 'components/MoviesList';\nimport Box from 'components/Box';\n// import { MoviesContainer } from './MoviesBox.styled';\n\nconst MoviesBox = ({ movies, hideBtn, loadMore, children }) => {\n  return (\n    <Box width=\"1280px\" as=\"section\">\n      {children}\n\n      <MoviesList movies={movies} />\n\n      {movies.length > 0 && hideBtn > 0 && (\n        <button type=\"button\" onClick={() => loadMore()}>\n          Load more\n        </button>\n      )}\n    </Box>\n  );\n};\n\nexport default MoviesBox;\n","import { useState, useEffect } from 'react';\n\nimport MoviesBox from 'components/MoviesBox';\n\nimport { getMovies } from 'services/moviesApi';\n\nconst HomePage = ({ pageTitle, movieRef }) => {\n  const [movies, setMovies] = useState([]);\n  const [ref, setRef] = useState('');\n  const [page, setPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(null);\n\n  useEffect(() => {\n    const searchMovies = async () => {\n      try {\n        const { results, total_pages } = await getMovies(ref, page);\n        setMovies(prevMovies => [...prevMovies, ...results]);\n        setTotalPages(total_pages);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    if (ref !== movieRef) {\n      setMovies([]);\n      setRef(movieRef);\n      setPage(1);\n      return;\n    }\n\n    searchMovies();\n  }, [movieRef, page, ref]);\n\n  const onLoadMore = hideBtn => {\n    setPage(prevPage => prevPage + 1);\n    console.log(hideBtn);\n  };\n\n  let onLastPage = totalPages - page;\n\n  return (\n    <main>\n      <MoviesBox movies={movies} hideBtn={onLastPage} loadMore={onLoadMore}>\n        <h1>{pageTitle}</h1>\n      </MoviesBox>\n    </main>\n  );\n};\n\nexport default HomePage;\n","import axios from 'axios';\n\nconst apiKey = 'f6621a4453f011cfb432a7f58c4cc70b';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getMovies = async (ref, page) => {\n  let movies = null;\n\n  switch (ref) {\n    case 'day':\n    case 'week':\n      movies = await axios({\n        url: `/trending/movie/${ref}?api_key=${apiKey}&page=${page}`,\n      });\n      break;\n\n    case 'popular':\n    case 'top_rated':\n    case 'upcoming':\n      movies = await axios({\n        url: `/movie/${ref}?api_key=${apiKey}&page=${page}`,\n      });\n      break;\n\n    default:\n      movies = await axios({\n        url: `/search/movie?api_key=${apiKey}&query=${ref}&page=${page}`,\n      });\n      break;\n  }\n\n  return movies.data;\n};\n\nexport const getMovieById = async movieId => {\n  const movie = await axios({\n    url: `/movie/${movieId}?api_key=${apiKey}`,\n  });\n\n  return movie.data;\n};\n\nexport const getCast = async movieId => {\n  const castData = await axios({\n    url: `/movie/${movieId}/credits?api_key=${apiKey}`,\n  });\n\n  return castData.data.cast;\n};\n\nexport const getReviews = async (movieId, page = 1) => {\n  const reviews = await axios({\n    url: `/movie/${movieId}/reviews?api_key=${apiKey}&page=${page}`,\n  });\n\n  return reviews.data;\n};\n\nexport const getGenres = async () => {\n  const genres = await axios({\n    url: `/genre/movie/list?api_key=${apiKey}`,\n  });\n\n  return genres;\n};\n\nexport const getImg = imgPath =>\n  `https://image.tmdb.org/t/p/original${imgPath}`;\n"],"names":["styled","color","space","layout","flexbox","background","border","position","MovieItem","movie","location","useLocation","id","title","release_date","poster_path","to","state","from","src","getImg","alt","List","movies","map","hideBtn","loadMore","children","Box","width","as","length","type","onClick","pageTitle","movieRef","useState","setMovies","ref","setRef","page","setPage","totalPages","setTotalPages","useEffect","searchMovies","getMovies","results","total_pages","prevMovies","console","log","onLastPage","MoviesBox","prevPage","apiKey","axios","url","data","getMovieById","movieId","getCast","castData","cast","getReviews","reviews","imgPath"],"sourceRoot":""}