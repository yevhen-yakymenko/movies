{"version":3,"file":"static/js/576.82eb441a.chunk.js","mappings":"4JAqBA,GAVYA,EAAAA,EAAAA,IAAO,MAAPA,CACVC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,G,kICAF,EAdsB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACfC,EAAkCD,EAAlCC,KAAMC,EAA4BF,EAA5BE,aAAcC,EAAcH,EAAdG,UAE5B,OACE,2BACE,SAACC,EAAA,EAAD,CAAKC,MAAM,QAAX,UACE,gBAAKC,KAAKC,EAAAA,EAAAA,IAAOL,GAAeM,IAAG,UAAKP,QAE1C,wBAAKA,KACL,uBAAIE,MAGT,ECoBD,EA5BkB,WAChB,OAAwBM,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAUR,OARAE,EAAAA,EAAAA,YAAU,WACR,KACEC,EAAAA,EAAAA,IAAQH,GAASI,KAAKL,EAGvB,CAFC,MAAOM,GACPC,QAAQC,IAAIF,EACb,CACF,GAAE,CAACL,IAECF,GAKH,gCACE,sCACA,SAACN,EAAA,EAAD,CAAKgB,GAAG,KAAKC,QAAQ,OAAOC,SAAS,OAArC,SACGZ,EAAKa,KAAI,SAAAvB,GAAM,OACd,SAAC,EAAD,CAA+BA,OAAQA,GAAnBA,EAAOwB,GADb,SAPb,IAaV,C,2NChCKC,EAASC,mCAEfC,EAAAA,GAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAS,mCAAG,WAAOC,EAAKC,GAAZ,uEACnBC,EAAS,KADU,KAGfF,EAHe,OAIhB,QAJgB,MAKhB,SALgB,OAWhB,YAXgB,MAYhB,cAZgB,MAahB,aAbgB,wCAMJF,EAAAA,EAAAA,IAAM,CACnBK,IAAI,mBAAD,OAAqBH,EAArB,oBAAoCJ,EAApC,iBAAmDK,KAPrC,8BAoBnBC,EApBmB,qDAcJJ,EAAAA,EAAAA,IAAM,CACnBK,IAAI,UAAD,OAAYH,EAAZ,oBAA2BJ,EAA3B,iBAA0CK,KAf5B,0BAoBJH,EAAAA,EAAAA,IAAM,CACnBK,IAAI,yBAAD,OAA2BP,EAA3B,kBAA2CI,EAA3C,iBAAuDC,KArBzC,iCA0BhBC,EAAOE,MA1BS,4CAAH,wDA6BTC,EAAY,mCAAG,WAAMtB,GAAN,wFACNe,EAAAA,EAAAA,IAAM,CACxBK,IAAI,UAAD,OAAYpB,EAAZ,oBAA+Ba,KAFV,cACpBU,EADoB,yBAKnBA,EAAMF,MALa,2CAAH,sDAQZlB,EAAO,mCAAG,WAAMH,GAAN,wFACEe,EAAAA,EAAAA,IAAM,CAC3BK,IAAI,UAAD,OAAYpB,EAAZ,4BAAuCa,KAFvB,cACfW,EADe,yBAKdA,EAASH,KAAKvB,MALA,2CAAH,sDAQP2B,EAAU,mCAAG,WAAOzB,GAAP,4FAAgBkB,EAAhB,+BAAuB,EAAvB,UACFH,EAAAA,EAAAA,IAAM,CAC1BK,IAAI,UAAD,OAAYpB,EAAZ,4BAAuCa,EAAvC,iBAAsDK,KAFnC,cAClBQ,EADkB,yBAKjBA,EAAQL,MALS,2CAAH,sDAQVM,EAAS,mCAAG,qGACFZ,EAAAA,EAAAA,IAAM,CACzBK,IAAI,6BAAD,OAA+BP,KAFb,cACjBe,EADiB,yBAKhBA,EAAOP,MALS,2CAAH,qDAQT1B,EAAS,SAAAkC,GAAO,mDACWA,EADX,C","sources":["components/Box/Box.js","components/MovieCastItem/MovieCastItem.jsx","components/MovieCast/MovieCast.jsx","services/moviesApi.js"],"sourcesContent":["import styled from 'styled-components';\nimport {\n  color,\n  space,\n  layout,\n  flexbox,\n  background,\n  border,\n  position,\n} from 'styled-system';\n\nconst Box = styled('div')(\n  color,\n  space,\n  layout,\n  flexbox,\n  background,\n  border,\n  position\n);\n\nexport default Box;\n","import Box from 'components/Box';\n\nimport { getImg } from 'services/moviesApi';\n\nconst MovieCastItem = ({ person }) => {\n  const { name, profile_path, character } = person;\n\n  return (\n    <li>\n      <Box width=\"160px\">\n        <img src={getImg(profile_path)} alt={`${name}`} />\n      </Box>\n      <h3>{name}</h3>\n      <p>{character}</p>\n    </li>\n  );\n};\n\nexport default MovieCastItem;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport MovieCastItem from 'components/MovieCastItem';\nimport Box from 'components/Box';\n\nimport { getCast } from 'services/moviesApi';\n\nconst MovieCast = () => {\n  const [cast, setCast] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    try {\n      getCast(movieId).then(setCast);\n    } catch (error) {\n      console.log(error);\n    }\n  }, [movieId]);\n\n  if (!cast) {\n    return null;\n  }\n\n  return (\n    <section>\n      <h1>Starring</h1>\n      <Box as=\"ul\" display=\"flex\" flexWrap=\"wrap\">\n        {cast.map(person => (\n          <MovieCastItem key={person.id} person={person} />\n        ))}\n      </Box>\n    </section>\n  );\n};\n\nexport default MovieCast;\n","import axios from 'axios';\n\nconst apiKey = process.env.REACT_APP_API_KEY;\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getMovies = async (ref, page) => {\n  let movies = null;\n\n  switch (ref) {\n    case 'day':\n    case 'week':\n      movies = await axios({\n        url: `/trending/movie/${ref}?api_key=${apiKey}&page=${page}`,\n      });\n      break;\n\n    case 'popular':\n    case 'top_rated':\n    case 'upcoming':\n      movies = await axios({\n        url: `/movie/${ref}?api_key=${apiKey}&page=${page}`,\n      });\n      break;\n\n    default:\n      movies = await axios({\n        url: `/search/movie?api_key=${apiKey}&query=${ref}&page=${page}`,\n      });\n      break;\n  }\n\n  return movies.data;\n};\n\nexport const getMovieById = async movieId => {\n  const movie = await axios({\n    url: `/movie/${movieId}?api_key=${apiKey}`,\n  });\n\n  return movie.data;\n};\n\nexport const getCast = async movieId => {\n  const castData = await axios({\n    url: `/movie/${movieId}/credits?api_key=${apiKey}`,\n  });\n\n  return castData.data.cast;\n};\n\nexport const getReviews = async (movieId, page = 1) => {\n  const reviews = await axios({\n    url: `/movie/${movieId}/reviews?api_key=${apiKey}&page=${page}`,\n  });\n\n  return reviews.data;\n};\n\nexport const getGenres = async () => {\n  const genres = await axios({\n    url: `/genre/movie/list?api_key=${apiKey}`,\n  });\n\n  return genres.data;\n};\n\nexport const getImg = imgPath =>\n  `https://image.tmdb.org/t/p/original${imgPath}`;\n"],"names":["styled","color","space","layout","flexbox","background","border","position","person","name","profile_path","character","Box","width","src","getImg","alt","useState","cast","setCast","movieId","useParams","useEffect","getCast","then","error","console","log","as","display","flexWrap","map","id","apiKey","process","axios","getMovies","ref","page","movies","url","data","getMovieById","movie","castData","getReviews","reviews","getGenres","genres","imgPath"],"sourceRoot":""}