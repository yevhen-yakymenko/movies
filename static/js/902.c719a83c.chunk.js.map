{"version":3,"file":"static/js/902.c719a83c.chunk.js","mappings":"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","sources":["components/MovieCastItem/MovieCastItem.styled.js","components/MovieCastItem/MovieCastItem.jsx","components/MovieCast/MovieCast.styled.js","components/MovieCast/MovieCast.jsx","services/moviesApi.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastItem = styled.li`\n  width: 140px;\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n\n  & h3 {\n    font-size: 16px;\n  }\n\n  & p {\n    font-size: 14px;\n    font-style: italic;\n  }\n`;\n\nexport const PhotoBox = styled.div`\n  width: 140px;\n`;\n","import { getImg } from 'services/moviesApi';\n\nimport noPhotoImg from 'images/no-image-camera.jpg';\n\nimport { CastItem, PhotoBox } from './MovieCastItem.styled';\n\nconst MovieCastItem = ({ person }) => {\n  const { name, profile_path, character } = person;\n\n  return (\n    <CastItem>\n      <PhotoBox>\n        <img\n          src={profile_path ? getImg(profile_path) : noPhotoImg}\n          alt={`${name}`}\n        />\n      </PhotoBox>\n      <h3>{name}</h3>\n      <p>{character}</p>\n    </CastItem>\n  );\n};\n\nexport default MovieCastItem;\n","import styled from 'styled-components';\n\nexport const CastContainer = styled.div`\n  flex: 0 1 100%;\n  max-width: 100%;\n\n  & h2 {\n    margin-bottom: 16px;\n    font-size: 28px;\n  }\n`;\n\nexport const CastList = styled.ul`\n  max-width: 100%;\n  display: flex;\n  gap: 16px;\n\n  overflow-x: scroll;\n\n  ::-webkit-scrollbar {\n    margin-top: 16px;\n    width: 5px;\n    height: 8px;\n    background-color: #aaa;\n    border-radius: 4px;\n  }\n\n  ::-webkit-scrollbar-thumb {\n    background: ${p => p.theme.colors.muted};\n    border-radius: 4px;\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport MovieCastItem from 'components/MovieCastItem';\nimport { getCast } from 'services/moviesApi';\n\nimport { CastContainer, CastList } from './MovieCast.styled';\n\nconst MovieCast = () => {\n  const [cast, setCast] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    try {\n      getCast(movieId).then(setCast);\n    } catch (error) {\n      console.log(error);\n    }\n  }, [movieId]);\n\n  if (!cast) {\n    return null;\n  }\n\n  return (\n    <CastContainer>\n      <h2>Cast</h2>\n      <CastList>\n        {cast.map(person => (\n          <MovieCastItem key={person.id} person={person} />\n        ))}\n      </CastList>\n    </CastContainer>\n  );\n};\n\nexport default MovieCast;\n","import axios from 'axios';\n\nconst apiKey = process.env.REACT_APP_API_KEY;\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getMovies = async (ref, page) => {\n  let movies = null;\n\n  switch (ref) {\n    case 'day':\n    case 'week':\n      movies = await axios({\n        url: `/trending/movie/${ref}?api_key=${apiKey}&page=${page}`,\n      });\n      break;\n\n    case 'popular':\n    case 'top_rated':\n    case 'upcoming':\n      movies = await axios({\n        url: `/movie/${ref}?api_key=${apiKey}&page=${page}`,\n      });\n      break;\n\n    default:\n      movies = await axios({\n        url: `/search/movie?api_key=${apiKey}&query=${ref}&page=${page}`,\n      });\n      break;\n  }\n\n  return movies.data;\n};\n\nexport const getMovieById = async movieId => {\n  const movie = await axios({\n    url: `/movie/${movieId}?api_key=${apiKey}`,\n  });\n\n  return movie.data;\n};\n\nexport const getCast = async movieId => {\n  const castData = await axios({\n    url: `/movie/${movieId}/credits?api_key=${apiKey}`,\n  });\n\n  return castData.data.cast;\n};\n\nexport const getReviews = async (movieId, page = 1) => {\n  const reviews = await axios({\n    url: `/movie/${movieId}/reviews?api_key=${apiKey}&page=${page}`,\n  });\n\n  return reviews.data;\n};\n\nexport const getGenres = async () => {\n  const genres = await axios({\n    url: `/genre/movie/list?api_key=${apiKey}`,\n  });\n\n  return genres.data;\n};\n\nexport const getImg = imgPath =>\n  `https://image.tmdb.org/t/p/original${imgPath}`;\n"],"names":["CastItem","styled","_templateObject","_taggedTemplateLiteral","PhotoBox","_templateObject2","_ref","person","name","profile_path","character","_jsxs","children","_jsx","src","getImg","alt","concat","CastContainer","CastList","p","theme","colors","muted","_useState","useState","_useState2","_slicedToArray","cast","setCast","movieId","useParams","useEffect","getCast","then","error","console","log","map","MovieCastItem","id","apiKey","process","axios","getMovies","_asyncToGenerator","_regeneratorRuntime","mark","_callee","ref","page","movies","wrap","_context","prev","next","t0","url","sent","abrupt","data","stop","_x","_x2","apply","arguments","getMovieById","_ref2","_callee2","movie","_context2","_x3","_ref3","_callee3","castData","_context3","_x4","getReviews","_ref4","_callee4","reviews","_args4","_context4","length","undefined","_x5","getGenres","_ref5","_callee5","genres","_context5","imgPath"],"sourceRoot":""}