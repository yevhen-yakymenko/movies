{"version":3,"file":"static/js/964.3086db63.chunk.js","mappings":"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","sources":["components/Box/Box.js","components/MovieCard/MovieCard.styled.js","components/MovieCard/MovieCard.jsx","components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","components/MoviesBox/MoviesBox.styled.js","components/MoviesBox/MoviesBox.jsx","components/ControlsBar/ControlsBar.styled.js","components/ControlsBar/ControlsBar.jsx","pages/HomePage/HomePage.styled.js","pages/HomePage/HomePage.jsx","services/moviesApi.js"],"sourcesContent":["import styled from 'styled-components';\nimport {\n  color,\n  space,\n  layout,\n  flexbox,\n  background,\n  border,\n  position,\n} from 'styled-system';\n\nconst Box = styled('div')(\n  color,\n  space,\n  layout,\n  flexbox,\n  background,\n  border,\n  position\n);\n\nexport default Box;\n","import styled from 'styled-components';\n\nexport const MovieItem = styled.li`\n  width: 196px;\n  padding: 8px;\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n`;\n","import { NavLink, useLocation } from 'react-router-dom';\n\nimport { getImg } from 'services/moviesApi';\n\nimport { MovieItem } from './MovieCard.styled';\n\nconst MovieCard = ({ movie }) => {\n  const location = useLocation();\n\n  const { id, title, release_date, poster_path } = movie;\n\n  return (\n    <MovieItem>\n      <NavLink to={`../movies/${id}`} state={{ from: location }}>\n        <img src={getImg(poster_path)} alt={title} />\n        <h4>{title}</h4>\n        <p>{release_date}</p>\n      </NavLink>\n    </MovieItem>\n  );\n};\n\nexport default MovieCard;\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  margin: 0 auto;\n`;\n","import MovieCard from 'components/MovieCard';\n\nimport { List } from './MoviesList.styled';\n\nconst MoviesList = ({ movies }) => {\n  return (\n    <List>\n      {movies.map(movie => (\n        <MovieCard key={movie.id} movie={movie} />\n      ))}\n    </List>\n  );\n};\n\nexport default MoviesList;\n","import styled from 'styled-components';\n\nexport const MoviesContainer = styled.div`\n  flex-basis: content;\n  background-color: ${p => p.theme.colors.background};\n  padding: 40px 16px;\n  overflow-y: scroll;\n`;\n","import { useState, useEffect } from 'react';\n\nimport MoviesList from 'components/MoviesList';\n// import Box from 'components/Box';\nimport { MoviesContainer } from './MoviesBox.styled';\n\nimport { getMovies } from 'services/moviesApi';\n\nconst MoviesBox = ({ movieRef, children }) => {\n  const [movies, setMovies] = useState([]);\n  const [ref, setRef] = useState('');\n  const [page, setPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(null);\n\n  useEffect(() => {\n    const searchMovies = async () => {\n      try {\n        const { results, total_pages } = await getMovies(ref, page);\n        setMovies(prevMovies => [...prevMovies, ...results]);\n        setTotalPages(total_pages);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    if (!movieRef) {\n      return;\n    }\n\n    if (ref !== movieRef) {\n      setMovies([]);\n      setRef(movieRef);\n      setPage(1);\n      return;\n    }\n\n    searchMovies();\n  }, [movieRef, page, ref]);\n\n  const onLoadMore = () => {\n    setPage(prevPage => prevPage + 1);\n  };\n\n  let onLastPage = totalPages - page;\n\n  return (\n    <MoviesContainer>\n      {children}\n\n      <MoviesList movies={movies} />\n\n      {movies.length > 0 && onLastPage > 0 && (\n        <button type=\"button\" onClick={() => onLoadMore()}>\n          Load more\n        </button>\n      )}\n    </MoviesContainer>\n  );\n};\n\nexport default MoviesBox;\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\nimport { HiOutlineArrowNarrowRight } from 'react-icons/hi';\n\nexport const Controls = styled.nav`\n  flex-basis: 240px;\n  min-width: 240px;\n  padding-top: 48px;\n  display: flex;\n  flex-direction: column;\n  background-color: ${p => p.theme.colors.muted};\n`;\n\nexport const StyledLink = styled(NavLink)`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 16px 8px 16px 40px;\n  color: ${p => p.theme.colors.white};\n\n  &.active {\n    background-color: ${p => p.theme.colors.background};\n    color: ${p => p.theme.colors.secondary};\n  }\n\n  :hover:not(.active),\n  :focus-visible:not(.active) {\n    color: ${p => p.theme.colors.accent};\n  }\n`;\n\nexport const ArrowRightIcon = styled(HiOutlineArrowNarrowRight)`\n  display: none;\n\n  ${StyledLink}.active & {\n    color: #535a5f;\n    display: block;\n  }\n`;\n","import { Controls, StyledLink, ArrowRightIcon } from './ControlsBar.styled';\n\nimport moviesRefs from 'data/moviesRefs.json';\n\nconst ControlsBar = () => {\n  return (\n    <Controls>\n      {moviesRefs.map(({ name, title }) => (\n        <StyledLink key={name} to={`../${name}`}>\n          {title} <ArrowRightIcon />\n        </StyledLink>\n      ))}\n    </Controls>\n  );\n};\n\nexport default ControlsBar;\n","import styled from 'styled-components';\n\nexport const PageTitle = styled.h1`\n  margin-bottom: 40px;\n  font-family: ${p => p.theme.fonts.heading};\n  font-weight: ${p => p.theme.fontWeights.heading};\n  color: ${p => p.theme.colors.white};\n`;\n","import ControlsBar from 'components/ControlsBar';\nimport MoviesBox from 'components/MoviesBox';\nimport Box from 'components/Box';\n\nimport { PageTitle } from './HomePage.styled';\n\nconst HomePage = ({ title, movieRef }) => {\n  return (\n    <Box as=\"main\" display=\"flex\" height=\"100vh\" pt=\"64px\">\n      <ControlsBar />\n      <MoviesBox movieRef={movieRef}>\n        <PageTitle>{title}</PageTitle>\n      </MoviesBox>\n    </Box>\n  );\n};\n\nexport default HomePage;\n","import axios from 'axios';\n\nconst apiKey = 'f6621a4453f011cfb432a7f58c4cc70b';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getMovies = async (ref, page) => {\n  let movies = null;\n\n  switch (ref) {\n    case 'day':\n    case 'week':\n      movies = await axios({\n        url: `/trending/movie/${ref}?api_key=${apiKey}&page=${page}`,\n      });\n      break;\n\n    case 'popular':\n    case 'top_rated':\n    case 'upcoming':\n      movies = await axios({\n        url: `/movie/${ref}?api_key=${apiKey}&page=${page}`,\n      });\n      break;\n\n    default:\n      movies = await axios({\n        url: `/search/movie?api_key=${apiKey}&query=${ref}&page=${page}`,\n      });\n      break;\n  }\n\n  return movies.data;\n};\n\nexport const getMovieById = async movieId => {\n  const movie = await axios({\n    url: `/movie/${movieId}?api_key=${apiKey}`,\n  });\n\n  return movie.data;\n};\n\nexport const getCast = async movieId => {\n  const castData = await axios({\n    url: `/movie/${movieId}/credits?api_key=${apiKey}`,\n  });\n\n  return castData.data.cast;\n};\n\nexport const getReviews = async (movieId, page = 1) => {\n  const reviews = await axios({\n    url: `/movie/${movieId}/reviews?api_key=${apiKey}&page=${page}`,\n  });\n\n  return reviews.data;\n};\n\nexport const getGenres = async () => {\n  const genres = await axios({\n    url: `/genre/movie/list?api_key=${apiKey}`,\n  });\n\n  return genres;\n};\n\nexport const getImg = imgPath =>\n  `https://image.tmdb.org/t/p/original${imgPath}`;\n"],"names":["styled","color","space","layout","flexbox","background","border","position","MovieItem","movie","location","useLocation","id","title","release_date","poster_path","to","state","from","src","getImg","alt","List","movies","map","MoviesContainer","p","theme","colors","movieRef","children","useState","setMovies","ref","setRef","page","setPage","totalPages","setTotalPages","useEffect","searchMovies","getMovies","results","total_pages","prevMovies","console","log","onLastPage","length","type","onClick","prevPage","Controls","muted","StyledLink","NavLink","white","secondary","accent","ArrowRightIcon","HiOutlineArrowNarrowRight","moviesRefs","name","PageTitle","fonts","heading","fontWeights","Box","as","display","height","pt","MoviesBox","apiKey","axios","url","data","getMovieById","movieId","getCast","castData","cast","getReviews","reviews","imgPath"],"sourceRoot":""}